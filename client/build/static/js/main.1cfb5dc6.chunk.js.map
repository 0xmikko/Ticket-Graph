{"version":3,"sources":["utils/updateState.js","actions/actions.js","reducers/auth.js","reducers/search.js","status.js","reducers/dataLoader.js","reducers/modals.js","reducers/typeAhead.js","reducers/index.js","utils/api.js","components/AppBar/AppSearch.js","actions/search.js","components/AppBar/AppBar.js","components/Footer.js","components/Auth/TextField.js","components/Auth/LoginForm.js","actions/auth.js","containers/Auth/Login.js","components/Auth/SignUpForm.js","containers/Auth/SignUp.js","containers/Auth/OAuthComplete.js","components/Page404.js","actions/dataLoader.js","components/ComponentSearch.js","components/PageHeader.js","components/DataLoaders/DataLoaderDetail.js","components/Forms/AutoCompleteField.js","actions/typeAhead.js","components/Forms/InputField.js","components/Forms/CheckBoxField.js","components/Forms/SelectField.js","components/Forms/FormikForm.js","containers/ContOptions/FormView.js","containers/ContOptions/_config.js","components/DataLoaders/DataLoaderList.js","components/ListViews/TableSubHeader.js","utils/formaters.js","components/ListViews/TableHeader.js","components/ListViews/TableListView.js","components/ButtonLink.js","containers/Projects/ListWidgetDeal.js","components/WindowWidget.js","containers/Deals/_config.js","containers/Deals/InfoWidget.js","components/TabBar/TabBar.js","containers/Deals/DetailView.js","containers/Deals/FormView.js","components/ListViews/InfiniteScrollListView.js","containers/Deals/ListHelper.js","containers/Deals/ListView.js","containers/Projects/ProjectCard.js","containers/Projects/_config.js","containers/Projects/ListView.js","actions/modals.js","components/Forms/FormikModal.js","containers/Finances/_config.js","containers/Finances/FormModal.js","components/DataUpdaters/DeleteDialog.js","containers/Finances/ListView.js","containers/Services/ServiceCard.js","containers/Groups/GroupCard.js","containers/Groups/GroupDetail.js","containers/Groups/_config.js","containers/Services/ServiceSelectModal.js","containers/Budgets/FormModal.js","containers/Budgets/_config.js","components/Confirmation.js","components/DataUpdaters/UpdateWithConfirmation.js","components/DataUpdaters/DeleteDialog_OLD.js","containers/Budgets/CreateFinancesDialog.js","containers/Budgets/ListWidgetEvent.js","containers/Budgets/BudgetLineTZ.js","containers/Budgets/ListWidgetEventTZ.js","containers/Projects/InfoWidget.js","containers/Projects/StatWidget.js","containers/Projects/DetailView.js","containers/Projects/FormView.js","containers/Options/_config.js","containers/Options/InfoWidget.js","containers/ContOptions/FormModal.js","containers/ContOptions/ListWidget.js","containers/Options/DetailView.js","containers/Options/FormView.js","containers/Options/ListWidget.js","containers/Payers/InfoWidget.js","containers/Payers/DetailView.js","containers/Payers/_config.js","containers/Payers/FormView.js","containers/Services/ListView.js","containers/Services/_config.js","containers/Services/FormView.js","containers/Services/InfoWidget.js","containers/Groups/GroupAddDelete.js","containers/Groups/PopupWidget.js","containers/Services/DetailView.js","containers/Suppliers/ListHelper.js","containers/Suppliers/_config.js","containers/Suppliers/ListView.js","containers/Suppliers/InfoWidget.js","containers/Contacts/FormModal.js","containers/Contacts/_config.js","containers/Contacts/ListWidget.js","containers/Payers/ListWidget.js","components/DataUpdaters/MergeDialog.js","containers/Suppliers/DuplicatesWidget.js","containers/Suppliers/DetailView.js","containers/Suppliers/FormView.js","components/ConfirmationModal.js","containers/App.js","middleware.js","index.js","store.js"],"names":["updateState","oldState","newValues","Object","objectSpread","TOKEN_RECEIVED","initialState","access","undefined","refresh","errors","signup_success","auth","state","arguments","length","action","console","log","type","token","payload","jwtDecode","profile","isVerified","response","non_field_errors","statusText","isRefreshTokenExpired","exp","Date","getTime","isLoading","options","search","STATUS_ACTIVE","STATUS_LOADING","STATUS_UPDATING","lists","details","updates","dataLoader","hashUpdate","obj","meta","resource","status","data","results","dataById","map","item","uuid","id","prevQuery","query","newQuery","updateData","count","previous","next","hash","now","searchUpdate","modals","confirmation","updateForms","updateConfirmation","formId","show","forms_data","typeAhead","isAuthenticated","fromAuth","accessToken","isAccessTokenExpired","refreshToken","authErrors","refreshTime","getSignupSuccess","getSearchItems","fromSearch","getDataList","fromDataLoader","getDataDetails","getHashUpdates","getComponentSearch","getShowForms","fromModals","getConfirmation","getOptionsList","fromTypeAhead","withAuth","headers","Authorization","concat","getFullAPIAddress","url","params","decodeURI","pos","key","value","getApiById","api","includes","replace","toString","endsWith","AppSearch","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","isRedirect","redirectURL","onChange","selected","selectedItem","setState","inherits","createClass","_this2","props","result","react_default","a","createElement","es_Redirect","to","lib","onSearch","align","Component","connect","dispatch","defineProperty","RSAA","endpoint","method","Content-Type","types","globalSearch","AppBar","authetictedMenu","Navbar","Collapse","Nav","className","Link","style","marginLeft","AppBar_AppSearch","variant","Item","bsPrefix","Form","inline","NavDropdown","title","alignRight","href","Divider","onClick","onLogout","nonAutheticatedMenu","Container","fluid","backgroundColor","paddingLeft","paddingRight","textColor","Brand","Toggle","aria-controls","footer","Row","Col","sm","target","rel","TextField","_ref","name","label","error","rest","objectWithoutProperties","input_type","Group","color","Label","htmlFor","Control","assign","Feedback","LoginForm","username","password","handleInputChange","event","checked","onSubmit","preventDefault","Card","marginBottom","marginTop","textAlign","Button","Alert","placeholder","signup","email","body","JSON","stringify","refreshAccessToken","actions","login","LoginForm_LoginForm","SignUpForm","emailCorrect","more8","less20","oneCapital","oneNumber","passwdEquals","formCorrect","changedAfterSubmit","validation","_this$setState","check","validateEmail","validatePassword","test","String","toLowerCase","newState","oneLowerCase","oneUpperCase","res","value_lenght","toUpperCase","match","margin","size","disabled","Auth_SignUpForm","GoogleAuthComplete","_React$Component","values","queryString","parse","location","code","onCodeRecevived","React","provider","oauthAuthenticate","Page404","Fragment","getDataLoaderList","getDataLoaderDetail","update","updateRequest","updateDataLoaderDetail","hashSent","FormData","deleteDetailUpdateParent","mergeDetailUpdateDetail","alias_id","alias","ComponentSearch","searchComponent","componentSearch","PageHeader","image","icon","src","height","marginRight","back","searchBar","components_ComponentSearch","paddingTop","paddingBottom","Media","Body","header","subHeader","DataLoaderDetails","new_api","updateDetailDataLoader","prevProps","prevState","snapshot","dataDetails","currentDataDetails","children","childrenProps","Children","child","cloneElement","mapStateToProps","mapDispatchToProps","getDetailDataLoader","DataLoaderDetailWrapperComponent","DetailDataLoader","component","updatedProps","page","childrenWithProps","DetailDataLoaderWrapper","InputComponent","_class","DataLoaderDetail_DataLoaderDetailWrapperComponent","AutoCompleteField","api_id","optionsList","currentOptionsList","fieldName","defaultItem","as","md","labelKey","multiple","setFieldValue","onBlur","e","setFieldTouched","defaultSelected","filter","pagination","InputField","handleChange","isInvalid","CheckBoxField","Check","SelectField","entries","FormikForm","redirect","updateDetail","hashUpdates","onSuccessLink","Redirect","schemaPrep","fieldList","x","schema","yup","dist","validationSchema","initialValues","render","fields","field","inputProps","Forms_InputField","Forms_SelectField","Forms_AutoCompleteField","Forms_CheckBoxField","noValidate","handleSubmit","file","FormView","fieldsList","cost","Yup","required","supplier","comment","backLink","option","components_PageHeader","num","date","Forms_FormikForm","ContOptions_FormView","deal_id","option_id","Wrapper","DataLoaderList","hasMore","dataLoaderUpdateList","onLoadMore","dataLists","currentDataList","getParams","parseUrl","getListDataLoader","loadMore","ListDataLoader","DataLoaderListWrapperComponent","DataLoaderListWrapper","DataLoaderList_DataLoaderListWrapperComponent","history","TableSubHeader","colSpan","n","numberWithCommas","parts","split","dateConverter","TableListView","headerItems","tableHeader","width","renderTable","Table","hover","TableHeader","items","padding","modalForms","toolbar","ButtonLink","ListHelper","sort","b","renderOneItem","renderLineToolbar","push","budget","budget_fact","lastYear","year","parseInt","substr","ListViews_TableSubHeader","components_ButtonLink","renderItems","renderToolbar","ListViews_TableListView","WindowWidget","Header","valign","rightToolbar","InfoWidget","components_WindowWidget","client","client_display","TabBar","navItems","eventKey","Tab","activeKey","tab","onSelect","Content","EventsWidget","EventListWidgetDeal","TabBar_TabBar","Pane","Deals_InfoWidget","sum_plan","official_name","google_drive","InfiniteScrollListView","react_infinite_scroller_default","toolBar","sum_fact","ListViews_InfiniteScrollListView","ListView","DataLoaderList_ListDataLoader","Deals_ListHelper","ProjectCard","lg","minHeight","Img","top","alt","Title","Text","prev_date","month_date","Projects_ProjectCard","createForm","showForm","FormikModal","handleClose","hideForm","onDataUpdate","formShow","dataForms","formData","Modal","onHide","centered","closeButton","FormModal","contractor","service_type","projected_sum","payment_type","NC","CA","IR","WH","CQ","R1","R2","GP","planned_sum","sum","Forms_FormikModal","showConfirmation","deleteItem","actionsD","confirmationDialogSettings","buttonActionName","hashPrefix","onAction","funcShowForm","contractor_display","qty","official_sum","payment_type_display","DataUpdaters_DeleteDialog","service_num","counter","sub_counter","service_type_display","f_items","Finances_FormModal","ServiceCard","GroupDetail","GroupCard","Services_ServiceCard","groups","get_items","services","parent_group","job","ServiceSelectModal","handleShow","dialogClassName","Groups_GroupDetail","price","Confirmation","onCancel","Footer","actionName","UpdateWithConfirmation","handleDelete","onSuccessURL","ButtonComponent","buttonComponent","components_Confirmation","DeleteDialog_OLD","DataUpdaters_UpdateWithConfirmation","MdDelete","CreateFinanceDialog","mergeItem","ListWidgetEvent","Services_ServiceSelectModal","internal","_this3","service","service_display","option_display","measure_display","total_cost","total_price","DataUpdaters_DeleteDialog_OLD","int","Budgets_FormModal","main_items","b_items","alt_items","BudgetHeader","BudgetLine","service_display_name","option_display_name","tz","ListGroup","whiteSpace","description","deal","deal_display","github","landing_url","video_url","DocumentsWidget","value_proposition","Projects_InfoWidget","StatWidget","Budgets_ListWidgetEvent","budgetSet","Finances_ListView","financeSet","Projects_FormView","int_name","ContOptionList","last_update","funcLinkOption","supplier_display","user_updated_display","phone","cont_options","ContOptions_FormModal","content_tab","cont_optionSet","ContOptions_ListWidget","Options_InfoWidget","Options_FormView","service_id","ListWidget","measure_display_name","INN","payer_display_name","gpd","parent","Payers_InfoWidget","is_company","is_person","is_enterpreneur","firstName","surnameName","birthday","passport_no","passport_date","passport_issuer","address","KPP","snils","BankAccount","Bank","BIK","CorrespondAccount","OGRN","OGRNIP","OKPO","dirJobTitle","dirSurname","dirFirstName","proxy","criteria","1","2","3","entry","forEach","Payers_FormView","startsWith","supplier_id","deals_id","Services_FormView","group_id","GroupAddForm","group","resourse","Badge","DeleteGroupAction","onDelete","DeleteGroupActionComponent","GroupDelete","Popover","PopupWidget","OverlayTrigger","trigger","placement","overlay","delay","GroupAddDelete","onSuccessUrlAfterDelete","Groups_PopupWidget","Services_InfoWidget","Options_ListWidget","website","orderBy","prevLetter","firstLetter","Suppliers_ListHelper","web","Contacts_FormModal","contacts","type_display","MergeDialog","MdCallMerge","DuplicatesWidget","DataUpdaters_MergeDialog","api_duplicates","Suppliers_InfoWidget","Contacts_ListWidget","Payers_ListWidget","payers","finances","Suppliers_DuplicatesWidget","Suppliers_FormView","hideConfirmation","App","routesNotAuthenticated","Switch","Route","path","Login","SignUp","exact","OAuthComplete","routesAuthenticated","ContOptionFormView","DealsListView","DealsFormView","DealsDetailView","ProjectsFormView","ProjectsListView","ProjectsDetailView","OptionsListWidget","OptionsFormView","OptionsDetailView","PayersFormView","PayersDetailView","ServicesListView","GroupsDetailView","ServicesFormView","ServicesDetailView","SuppliersListView","SupplierFormView","SuppliersDetailView","ConfirmationModal","components_AppBar_AppBar","components_Footer","withRouter","createApiMiddleware","postponedRSAAs","getState","rsaaMiddleware","apiMiddleware","isRSAA","nextAction","postponed","__webpack_require__","d","__webpack_exports__","src_store_0","createHistory","store","persistedFilter","createFilter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","persistReducer","storage","whitelist","transforms","combineReducers","router","connectRouter","rootReducer","createStore","applyMiddleware","routerMiddleware","thunk","persistStore","configureStore","process","ReactDOM","es","esm","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.1cfb5dc6.chunk.js","sourcesContent":["// Updating state immutable\n\n//import {error, success} from \"react-notification-system-redux\";\n\nexport const updateState = (oldState, newValues) =>\n    (\n        {\n            ...oldState,\n            ...newValues\n        }\n    )\n\n\n/*\nexport const notifyError = (message) =>\n{\n   return error({\n                    title: \"Internal error\",\n                    message: message,\n                    position: 'tr',\n                    action: {\n                        label: 'Got it!'\n                    }\n                })\n}\n*/\n","export const LOGIN_REQUEST = '@@jwt/LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = '@@jwt/LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = '@@jwt/LOGIN_FAILURE';\n\nexport const LOGOUT        = '@@jwt/LOGOUT';\n\nexport const SIGNUP_REQUEST = '@@jwt/SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = '@@jwt/SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = '@@jwt/SIGNUP_FAILURE';\n\nexport const TOKEN_REQUEST  = '@@jwt/TOKEN_REQUEST';\nexport const TOKEN_RECEIVED = '@@jwt/TOKEN_RECEIVED';\nexport const TOKEN_FAILURE  = '@@jwt/TOKEN_FAILURE';\n\n// ----- SEARCH ----------\n\nexport const SEARCH_QUERY_REQUEST = 'SEARCH/QUERY_REQUEST';\nexport const SEARCH_QUERY_SUCCESS = 'SEARCH/QUERY_SUCCESS';\nexport const SEARCH_QUERY_FAILURE = 'SEARCH/QUERY_FAILURE';\n\n// ------ DATA_LOADER ----------\n\nexport const DATA_LOADER_LIST_REQUEST = '@@DATA_LOADER/LIST_REQUEST';\nexport const DATA_LOADER_LIST_UPDATE_REQUEST = '@@DATA_LOADER/UPDATE_LIST_REQUEST';\nexport const DATA_LOADER_LIST_SUCCESS = '@@DATA_LOADER/LIST_SUCCESS';\nexport const DATA_LOADER_LIST_FAILURE = '@@DATA_LOADER/LIST_FAILURE';\n\n\nexport const DATA_LOADER_DETAIL_REQUEST = '@@DATA_LOADER/DETAIL_REQUEST';\nexport const DATA_LOADER_DETAIL_UPDATE = '@@DATA_LOADER/DETAIL_UPDATE';\nexport const DATA_LOADER_DETAIL_SUCCESS = '@@DATA_LOADER/DETAIL_SUCCESS';\nexport const DATA_LOADER_DETAIL_FAILURE = '@@DATA_LOADER/DETAIL_FAILURE';\n\nexport const DATA_LOADER_UPLOAD_REQUEST = '@@DATA_LOADER/UPLOAD_REQUEST';\nexport const DATA_LOADER_UPLOAD_SUCCESS = '@@DATA_LOADER/UPLOAD_SUCCESS';\nexport const DATA_LOADER_UPLOAD_FAILURE = '@@DATA_LOADER/UPLOAD_FAILURE';\n\nexport const DATA_LOADER_DELETE_REQUEST = '@@DATA_LOADER/DELETE_REQUEST';\nexport const DATA_LOADER_DELETE_SUCCESS = '@@DATA_LOADER/DELETE_SUCCESS';\nexport const DATA_LOADER_DELETE_FAILURE = '@@DATA_LOADER/DELETE_FAILURE';\n\nexport const TYPEAHEAD_LIST_REQUEST = '@@TYPEAHEAD/LIST_REQUEST';\nexport const TYPEAHEAD_LIST_UPDATE_REQUEST = '@@TYPEAHEAD/UPDATE_LIST_REQUEST';\nexport const TYPEAHEAD_LIST_SUCCESS = '@@TYPEAHEAD/LIST_SUCCESS';\nexport const TYPEAHEAD_LIST_FAILURE = '@@TYPEAHEAD/LIST_FAILURE';\n\nexport const SEARCH_COMPONENT = \"@@SEARCH/COMPONENT\";\n\n// BUDGETS\nexport const BUDGETS_MAKE_FINANCES = \"@@BUDGETS/MAKE_FINANCES\";\n\n// FINANCES\nexport const FINANCES_CLEAR_ALL = \"@@FINANCES/CLEAR_ALL\";\n\n// MODALS\n\nexport const FORMS_NEW_REQUEST = \"@@FORMS/NEW_REQUEST\";\nexport const FORMS_NEW_SUCCESS = \"@@FORMS/NEW_SUCCESS\";\nexport const FORMS_SHOW = \"@@FORMS/SHOW\";\nexport const FORMS_HIDE = \"@@FORMS/HIDE\";\n\nexport const CONFIRMATION_SHOW = \"@@CONFIRMATIONS/SHOW\";\nexport const CONFIRMATION_HIDE = \"@@CONFIRMATIONS/HIDE\";\n\n\n\n\n","import jwtDecode from 'jwt-decode'\nimport { updateState } from \"../utils/updateState\";\nimport * as auth from '../actions/actions'\n\n\nconst initialState = {\n  access: undefined,\n  refresh: undefined,\n  errors: {},\n  signup_success: false\n}\n\nexport default (state=initialState, action) => {\n\n  console.log(action)\n\n  switch(action.type) {\n    case auth.LOGIN_SUCCESS:\n      return {\n        ...state,\n        access: {\n          token: action.payload.access,\n          ...jwtDecode(action.payload.access)\n        },\n        refresh: {\n          token: action.payload.refresh,\n          ...jwtDecode(action.payload.refresh)\n        },\n        profile: undefined,\n        isVerified: undefined,\n        errors: {}\n    }\n    case auth.TOKEN_RECEIVED:\n      return updateState(state, {\n                                    ...state,\n                                    access: {\n                                      token: action.payload.access,\n                                      ...jwtDecode(action.payload.access)\n                                    }\n                                  })\n\n\n    case auth.LOGIN_FAILURE:\n    case auth.TOKEN_FAILURE:\n    case auth.SIGNUP_FAILURE:\n\n      return {\n        ...state,\n         access: undefined,\n         refresh: undefined,\n         errors: action.payload.response || {'non_field_errors': action.payload.statusText},\n      }\n\n    case auth.LOGOUT:\n      return {\n         ...state,\n         access: undefined,\n         refresh: undefined,\n      }\n\n    case auth.SIGNUP_SUCCESS:\n      return {\n        ...state,\n        signup_success: true\n\n      }\n    default:\n      return state\n    }\n}\n\nexport function accessToken(state) {\n  if (state.access) {\n    return  state.access.token\n  }\n}\n\nexport function isAccessTokenExpired(state) {\n  if (state.access && state.access.exp) {\n    return 1000 * state.access.exp - (new Date()).getTime() < 5000\n  }\n  return true\n}\n\nexport function refreshToken(state) {\n  if (state.refresh) {\n    return  state.refresh.token\n  }\n}\n\nexport function isRefreshTokenExpired(state) {\n  if (state.refresh && state.refresh.exp) {\n    return 1000 * state.refresh.exp - (new Date()).getTime() < 5000\n  }\n  return true\n}\n\nexport function isAuthenticated(state) {\n  return !isRefreshTokenExpired(state)\n}\n\nexport function errors(state) {\n  return  state.errors\n}\n\nexport const refreshTime = (state) => state\n\nexport const signupSuccess = (state) => state.signup_success\n","import { updateState } from \"../utils/updateState\";\nimport * as auth from '../actions/actions'\n\n\nconst initialState = {\n  isLoading: false,\n  options: []\n}\n\nexport default (state=initialState, action) => {\n\n  console.log(\"SEARCH\", action)\n\n  switch (action.type) {\n    case auth.SEARCH_QUERY_REQUEST:\n      return updateState(state, {\n        ...state,\n        isLoading: true\n      })\n\n    case auth.SEARCH_QUERY_SUCCESS:\n      return updateState(state, {\n        ...state,\n        isLoading: false,\n        options: action.payload.options\n      })\n\n\n    default:\n      return state\n\n  }\n}\n\nexport const getSearchItems = (state) => (state);\n","export const BACKEND_ADDR = (process.env.NODE_ENV === 'development') ? 'http://localhost:8000' : 'https://argumento-stage.herokuapp.com/';\n\n\nexport const STATUS_UPDATE_NEEDED  = '@@status/UPDATE_NEEDED'\n\nexport const STATUS_ACTIVE  = '@@status/ACTIVE'\nexport const STATUS_LOADING = '@@status/LOADING'\nexport const STATUS_UPDATING = '@@status/UPDATING'\nexport const STATUS_SUCCESS = '@@status/SUCCESS'\nexport const STATUS_FAILURE = '@@status/FAILURE'\n\n","import { updateState } from \"../utils/updateState\";\nimport * as actions from '../actions/actions';\nimport * as status from '../status';\n\n\nconst initialState = {\n  lists: {},\n  details: {},\n  updates: {},\n  search: {}\n};\n\n\nexport default (state=initialState, action) => {\n\n  const obj = {};\n  let hash, hashUpdate;\n\n  switch (action.type) {\n\n      case actions.DATA_LOADER_LIST_REQUEST:\n         obj[action.meta.resource] = {\n             status: status.STATUS_LOADING,\n             data: []\n         }\n\n        return updateState(state, { ...state,\n                        lists: updateState(state.lists, obj) });\n\n      case actions.DATA_LOADER_LIST_UPDATE_REQUEST:\n         obj[action.meta.resource] = {\n             ...state.lists[action.meta.resource],\n             status: status.STATUS_UPDATING,\n         }\n\n        return updateState(state, { ...state, lists: {...obj} });\n         \n\n      case actions.DATA_LOADER_LIST_SUCCESS:\n\n          let data = (action.payload.results !== undefined) ? action.payload.results : action.payload;\n\n          const dataById = []\n          data.map(item => dataById[(item.uuid===undefined) ? item.id : item.uuid] = item)\n\n          const prevQuery = state.lists[action.meta.resource].query;\n          const newQuery = action.meta.query;\n          console.log(\"QQQ1\",  action.meta);\n          console.log(\"QQQ1\", prevQuery);\n          console.log(\"QQQ2\", newQuery);\n\n          let updateData = (newQuery === prevQuery)? state.lists[action.meta.resource].data : undefined;\n\n          obj[action.meta.resource] = {\n                  status: status.STATUS_SUCCESS,\n                  data: {\n                    ...updateData,\n                    ...dataById\n                  },\n                  count: action.payload.count,\n                  previous: action.payload.previous,\n                  next: action.payload.next,\n                  query: newQuery\n              }\n\n          return updateState(state, { ...state,\n              lists: updateState(state.lists, obj) });\n\n    case actions.DATA_LOADER_LIST_FAILURE:\n          obj[action.meta.resource] = {\n              status: status.STATUS_FAILURE,\n              data: []\n          }\n          return updateState(state, { ...state,\n              lists: updateState(state.lists, obj) });\n\n\n    /*\n                                 DETAIL REQUESTS\n        =====================================================================\n    */\n\n\n    case actions.DATA_LOADER_DETAIL_REQUEST:\n\n          obj[action.meta.resource] = state.details[action.meta.resource] || {};\n          obj[action.meta.resource][action.meta.id] = {\n              status: status.STATUS_LOADING,\n          }\n\n        return updateState(state, { ...state,\n                            details: updateState(state.details, obj)});\n\n    case actions.DATA_LOADER_DETAIL_SUCCESS:\n\n          console.log(\"DETAILS\", state.details)\n          // We add an info of update for current hash\n          hash = action.meta.hash || 0;\n          hashUpdate = {};\n          hashUpdate[hash] = +Date.now();\n\n          obj[action.meta.resource] = state.details[action.meta.resource] || {};\n          obj[action.meta.resource][action.meta.id] = {\n              status: status.STATUS_SUCCESS,\n              data: action.payload,\n          }\n          return updateState(state,\n                { ...state,\n                            details: updateState(state.details, obj),\n                            updates: updateState(state.updates, hashUpdate)});\n\n    case actions.DATA_LOADER_DETAIL_FAILURE:\n          obj[action.meta.resource] = {};\n          obj[action.meta.resource][action.meta.id] = {\n              status: status.STATUS_FAILURE,\n              data: []\n          }\n          return updateState(state, { ...state, details: {...obj} });\n\n\n    // DELETE OPERATIONS\n\n    case actions.DATA_LOADER_DELETE_SUCCESS:\n        hash = action.meta.hash || 0;\n        hashUpdate = {};\n        hashUpdate[hash] = +Date.now();\n\n        // Remove resource + id from list\n        obj[action.meta.resource] = state.lists[action.meta.resource];\n        console.log(\"DELETE\", action.meta.resource)\n        console.log(\"DELETE\", obj)\n        if (obj[action.meta.resource]) {\n            data = obj[action.meta.resource].data\n            if (data[action.meta.id]) delete data[action.meta.id]\n        }\n\n        console.log(\"DELETE\", obj)\n\n        return updateState(state,\n            { ...state,\n                        lists: updateState(state.lists, obj),\n                        updates: updateState(state.updates, hashUpdate)});\n\n    case actions.SEARCH_COMPONENT:\n        if (!action.resource) throw \"No resource for search were sent\";\n        const searchUpdate = {};\n        searchUpdate[action.resource] = action.query;\n\n        return updateState(state,\n            { ...state,\n                        search: updateState(state.updates, searchUpdate)});\n\n\n    default:\n          return state;\n\n  }\n}\n\nexport const getDataList    = (state) => (state.lists);\nexport const getDataDetails = (state) => (state.details);\nexport const getHashUpdates = (state) => (state.updates);\nexport const getComponentSearch = (state) => (state.search);\n","import { updateState } from \"../utils/updateState\";\nimport * as actions from '../actions/actions'\n\n\nconst initialState = {\n  modals: {},\n  confirmation: {},\n};\n\n\nexport default (state=initialState, action) => {\n\n  console.log(\"REDUCER STATE\", state);\n  console.log(\"REDUCER ACTION\", action);\n\n  let updateForms = state.modals, updateConfirmation=state.confirmation;\n\n  switch (action.type) {\n\n    // ====== FORMS ===============\n    case actions.FORMS_SHOW:\n        updateForms[action.formId] = {show: true, data: action.data};\n        return updateState(state, {...state, modals: updateState(state.modals, updateForms)});\n\n    case actions.FORMS_NEW_SUCCESS:\n        const forms_data = action.payload;\n        forms_data.id = \"new\"\n        updateForms[action.meta.formId] = {show: true, data: forms_data};\n        return updateState(state, {...state, modals: updateState(state.modals, updateForms)});\n\n    case actions.FORMS_HIDE:\n        const data = (state.modals['formId']) ? state.modals['formId'].data: undefined;\n        updateForms[action.formId] = { show: false, data: data };\n        return updateState(state, {...state, modals: updateState(state.modals, updateForms)});\n\n    // ====== CONFIRMATION ===============\n    case actions.CONFIRMATION_SHOW:\n        updateConfirmation = { show: true, data:  action.data};\n        return updateState(state, {...state, confirmation: updateState(state.confirmation, updateConfirmation)});\n\n    case actions.CONFIRMATION_HIDE:\n        updateConfirmation = { show: false };\n        return updateState(state, {...state, confirmation: updateState(state.confirmation, updateConfirmation)});\n\n    default:\n        return state\n\n  }\n}\n\nexport const getShowForms = (state) => (state.modals);\nexport const getConfirmation = (state) => (state.confirmation);\n","import { updateState } from \"../utils/updateState\";\nimport * as actions from '../actions/actions';\nimport * as status from '../status';\n\n\nconst initialState = {\n  lists: {},\n  updates: {}\n};\n\n\nexport default (state=initialState, action) => {\n\n  const obj = {};\n  let hash, hashUpdate;\n\n  switch (action.type) {\n\n      case actions.TYPEAHEAD_LIST_REQUEST:\n         obj[action.meta.resource] = {\n             status: status.STATUS_LOADING,\n             data: []\n         }\n\n        return updateState(state, { ...state, lists: {...obj} });\n\n      case actions.TYPEAHEAD_LIST_SUCCESS:\n          let data = (action.payload.results !== undefined) ? action.payload.results : action.payload;\n\n          const dataById = []\n          //data.map(item => dataById[item.id] = item)\n\n          obj[action.meta.resource] = {\n                  status: status.STATUS_SUCCESS,\n                  data: data,\n              }\n          return updateState(state, { ...state, lists: updateState(state.lists, obj) });\n\n    case actions.TYPEAHEAD_LIST_FAILURE:\n          obj[action.meta.resource] = {\n              status: status.STATUS_FAILURE,\n              data: []\n          }\n          return updateState(state, { ...state,lists: updateState(state.lists, obj) });\n\n      default:\n          return state;\n\n  }\n}\n\nexport const getOptionsList    = (state) => (state.lists);","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport auth, * as fromAuth from './auth'\nimport search, * as fromSearch from './search'\nimport dataLoader, * as fromDataLoader from './dataLoader'\nimport modals, * as fromModals from './modals';\nimport typeAhead, * as fromTypeAhead from './typeAhead'\n\n\nexport default (history) => combineReducers({\n\n    router:  connectRouter(history),\n    auth: auth,\n    search: search,\n    dataLoader: dataLoader,\n    modals: modals,\n    typeAhead: typeAhead\n\n})\n\n// Authentication\nexport const isAuthenticated = state => fromAuth.isAuthenticated(state.auth);\nexport const accessToken = state => fromAuth.accessToken(state.auth);\nexport const isAccessTokenExpired = state => fromAuth.isAccessTokenExpired(state.auth);\nexport const refreshToken = state => fromAuth.refreshToken(state.auth);\nexport const isRefreshTokenExpired = state => fromAuth.isRefreshTokenExpired(state.auth);\nexport const authErrors = state => fromAuth.errors(state.auth);\nexport const refreshTime = state => fromAuth.refreshTime(state.auth);\nexport const getSignupSuccess = state => fromAuth.signupSuccess(state.auth);\n\n// Search\nexport const getSearchItems = state => fromSearch.getSearchItems(state.search);\n\n// DataLoader\nexport const getDataList = state => fromDataLoader.getDataList(state.dataLoader);\nexport const getDataDetails = state => fromDataLoader.getDataDetails(state.dataLoader);\nexport const getHashUpdates = state => fromDataLoader.getHashUpdates(state.dataLoader);\nexport const getComponentSearch = state => fromDataLoader.getComponentSearch(state.dataLoader);\n\n// Modals\nexport const getShowForms = state => fromModals.getShowForms(state.modals);\nexport const getConfirmation = state => fromModals.getConfirmation(state.modals);\n\n// TypeAhead\nexport const getOptionsList = state => fromTypeAhead.getOptionsList(state.typeAhead);\n\nexport function withAuth(headers={}) {\n  return (state) => ({\n    ...headers,\n    'Authorization': `Bearer ${accessToken(state)}`\n  })\n}\n","import {BACKEND_ADDR} from \"../status\";\n\n\nexport const getFullAPIAddress = (url, params) => {\n    // Decode URI if it was in %% format, it's important\n    // when we receive next_url in pagination\n    url = decodeURI(url);\n    /*\n    if (!url.startsWith(\"http://\")) {\n        url = (BACKEND_ADDR.endsWith(\"/\") && url.startsWith(\"/\")) ? BACKEND_ADDR + url.substr(1) :\n            BACKEND_ADDR + url;\n    }\n    */\n    let pos = 0;\n    for(let key in params) {\n        let value = params[key];\n        if (value) {\n            url += ((pos === 0) ? \"?\" : \"&\") + key + \"=\" + value;\n            pos++;\n        }\n\n    }\n    return url\n};\n\n\n\nexport const getApiById = (api, id, params) => {\n\n    if (api.includes(\":id\")) api = api.replace(\":id\", id.toString()); else if (id!== undefined) api += id;\n\n    api += (!api.endsWith(\"/\")) ? \"/\": \"\";\n    return getFullAPIAddress(api, params);\n};","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\nimport { getSearchItems } from \"../../reducers\";\nimport { globalSearch } from \"../../actions/search\";\nimport {connect} from \"react-redux\";\n\n\nexport class AppSearch extends Component {\n\n    state = {\n        isRedirect: false,\n        redirectURL: null\n    }\n\n    onChange = (selected) => {\n        const selectedItem = selected[0];\n        this.setState({\n            isRedirect: true,\n            redirectURL: selectedItem.url\n        })\n\n    }\n\n    render() {\n\n        console.log(this.props.result || \"No results yet\")\n\n        if (this.state.isRedirect) {\n            const url = this.state.redirectURL;\n            this.setState({\n            isRedirect: false,\n            redirectURL: null\n        })\n        return <Redirect to={url} />\n        }\n\n        return <AsyncTypeahead\n          isLoading={this.props.result.isLoading}\n          onSearch={ (query) => this.props.onSearch(query)}\n          options={this.props.result.options}\n          align={'right'}\n          onChange={(selected) => this.onChange(selected)}\n        />\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    result:     getSearchItems(state),\n\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n        onSearch: (query) => dispatch(globalSearch(query))\n  }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppSearch);\n\n/*\nquery => {\n            this.setState({isLoading: true});\n            fetch(getFullAPIAddress + 'search/?q=${query}')\n              .then(resp => resp.json())\n              .then(json => this.setState({\n                isLoading: false,\n                options: json.items,\n              }));\n          }\n\n\n\n\n */","import {RSAA} from 'redux-api-middleware';\nimport {getFullAPIAddress} from '../utils/api'\nimport {withAuth} from '../reducers'\nimport * as actions from './actions'\n\n\nexport const globalSearch = (query) => ({\n    [RSAA]: {\n        endpoint: getFullAPIAddress(`/api/search/?query=${query}`),\n        method: 'GET',\n        headers: withAuth({ 'Content-Type': 'application/json' }),\n        types: [ actions.SEARCH_QUERY_REQUEST, actions.SEARCH_QUERY_SUCCESS, actions.SEARCH_QUERY_FAILURE ]\n    }\n});","import React from \"react\";\nimport {Nav, NavDropdown, Form, Button, Navbar, Container} from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport AppSearch from \"./AppSearch\"\nimport \"./AppBar.css\"\n\n\nconst AppBar = (props) => {\n\n    const authetictedMenu = (\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link style={{marginLeft: 20}}/>\n                    <AppSearch className=\"mr-sm-2\" />\n                </Nav>\n                <Nav variant={\"right\"} >\n                    <Nav.Item bsPrefix={'nav-link'}><Link to={\"/clients/\"}>Clients</Link></Nav.Item>\n                    <Nav.Item bsPrefix={'nav-link'}><Link to={\"/deals/\"}>Deals</Link></Nav.Item>\n                    <Nav.Item bsPrefix={'nav-link'}><Link to={\"/projects/\"}>Projects</Link></Nav.Item>\n                    <Nav.Item bsPrefix={'nav-link'}><Link to={\"/services/\"}>Services</Link></Nav.Item>\n                    <Nav.Item bsPrefix={'nav-link'}><Link to={\"/suppliers/\"}>Suppliers</Link></Nav.Item>\n                    <Form inline>\n\n                </Form>\n                  <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\" alignRight>\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item onClick={ props.onLogout }>Logout</NavDropdown.Item>\n                  </NavDropdown>\n                </Nav>\n\n              </Navbar.Collapse>\n    ) ;\n\n    const nonAutheticatedMenu = (\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n             <Nav className=\"mr-auto\">\n             </Nav>\n            <Nav variant={\"right\"}>\n                    <Nav key={3.1}>\n                        <Link to={'/login'}>SIGN IN </Link>\n                    </Nav>\n                    <Nav key={3.2}>\n                        <Link to={'/signup'}>SIGN UP </Link>\n                    </Nav>\n            </Nav>\n        </Navbar.Collapse>);\n\n    return (\n        <Container fluid style={{backgroundColor: \"#F0F0FF\", paddingLeft: 20, paddingRight:40}}>\n            <Navbar style={{textColor: \"#000000\", paddingLeft: 20, paddingRight:40, }}>\n                <Navbar.Brand href=\"/\"><strong>Omnistory</strong></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n                { props.isAuthenticated ? authetictedMenu : nonAutheticatedMenu }\n\n            </Navbar>\n        </Container>\n            )\n\n}\n\n\nexport default AppBar;\n","import React from \"react\";\nimport {Container, Col, Row} from \"react-bootstrap\"\nimport './Footer.css'\n\nconst footer = ( props ) => (\n        <footer className=\"footer navbar-fixed-bottom\">\n            <Container fluid>\n                <Row>\n                    <Col sm={6}>\n                         2019 © Mikhail Lazarev, All rights reserved\n                    </Col>\n                    <Col sm={6}>\n                         <a href=\"http://t.me/mikael_l\" target=\"_blank\" rel=\"noopener noreferrer\">Contact</a>\n                    </Col>\n                </Row>\n\n            </Container>\n        </footer>);\n\n\nexport default footer;\n","import React from 'react'\nimport { Form } from 'react-bootstrap';\n\nexport default ({name, label, error, type, ...rest}) => {\n  const id = `id_${name}`,\n        input_type = type?type:\"text\"\n  return (\n    <Form.Group color={error?\"danger\":\"\"}>\n      {label?<Form.Label htmlFor={id}>{label}</Form.Label>: \"\"}\n      <Form.Control type={input_type} name={name}\n             id={id} className={error?\"is-invalid\":\"\"}\n             {...rest} />\n      {error?\n         <Form.Control.Feedback type=\"invalid\">\n             {error}\n          </Form.Control.Feedback>\n         : \"\"\n      }\n    </Form.Group>\n  )\n}","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport { Alert, Button, ButtonToolbar, ButtonGroup, Form, InputGroup, Card } from 'react-bootstrap';\nimport TextField from './TextField'\nimport './LoginForm.css'\nimport {getApiById} from \"../../utils/api\";\n\nexport default class LoginForm extends Component {\n  state = {\n    username: '',\n    password: ''\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target,\n      value = target.type ===\n      'checkbox' ? target.checked : target.value,\n      name = target.name\n    this.setState({\n      [name]: value\n    });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault()\n    this.props.onSubmit(this.state.username, this.state.password)\n  }\n\n  render() {\n    const errors = this.props.errors || {}\n    return (\n\n        <div className={'container-group'}>\n\n        <Card className={'login-panel'}>\n            <h2 className={'welcome-text'} style={{marginBottom: 0, marginTop: 10, textAlign: 'left'}}>Log into MicroCRM</h2>\n            <div style={{marginBottom: 20, textAlign: 'left'}}>New to MicroCRM? &nbsp;<Link to={'/signup/'}>Sign Up</Link></div>\n            <a href={getApiById('/api/auth/google/')}>\n            <Button\n                    className=\"login-button\"\n                    variant=\"outline-primary\"\n            >\n               Login with Google\n            </Button></a>\n            <br />or<br/>\n            <br />\n            <Form onSubmit={this.onSubmit}>\n            \n              {\n              errors.non_field_errors ?\n                <Alert color=\"danger\">\n                    {errors.non_field_errors}\n                </Alert>:\"\"\n              }\n              <TextField name=\"username\" \n                        placeholder=\"E-mail\" \n                        error={errors.username}\n                        onChange={this.handleInputChange} \n                        className=\"login-input\"\n                        />\n\n              <TextField name=\"password\"\n                        placeholder=\"Password\" \n                        error={errors.password} type=\"password\"  \n                        onChange={this.handleInputChange} \n                        className=\"login-input\" />\n\n              <Button type=\"submit\"\n                      className=\"login-button\">\n                 SIGN IN\n              </Button>\n\n\n\n              </Form>\n        </Card>\n</div>\n\n    )\n  }\n}\n","import { RSAA } from 'redux-api-middleware';\nimport { getFullAPIAddress } from '../utils/api'\nimport * as actions from './actions'\n\n\nexport const login = (username, password) => ({\n    [RSAA]: {\n        endpoint: getFullAPIAddress('/auth/token/obtain/'),\n        method: 'POST',\n        body: JSON.stringify({username, password}),\n        headers: {'Content-Type': 'application/json'},\n        types: [actions.LOGIN_REQUEST, actions.LOGIN_SUCCESS, actions.LOGIN_FAILURE]\n    }\n});\n\n\nexport const oauthAuthenticate = (provider, code) => ({\n    [RSAA]: {\n        endpoint: getFullAPIAddress( '/auth/google/done/'),\n        method: 'POST',\n        body: JSON.stringify({provider: provider, code: code}),\n        headers: { 'Content-Type': 'application/json' },\n        types: [actions.LOGIN_REQUEST, actions.LOGIN_SUCCESS, actions.LOGIN_FAILURE]\n    }\n});\n\n\nexport const signup = (email, password) => ({\n    [RSAA]: {\n        endpoint: getFullAPIAddress( '/auth/signup/' ),\n        method: 'POST',\n        body: JSON.stringify({email, password}),\n        headers: { 'Content-Type': 'application/json' },\n        types: [\n            actions.SIGNUP_REQUEST, actions.SIGNUP_SUCCESS, actions.SIGNUP_FAILURE\n        ]\n      }\n});\n\n\nexport const refreshAccessToken = (token) => ({\n    [RSAA]: {\n        endpoint: getFullAPIAddress( '/auth/token/refresh/' ),\n        method: 'POST',\n        body: JSON.stringify({refresh: token}),\n        headers: { 'Content-Type': 'application/json' },\n        types: [\n          actions.TOKEN_REQUEST, actions.TOKEN_RECEIVED, actions.TOKEN_FAILURE\n        ]\n    }\n});\n\n\nexport const logout = () => ({\n    type: actions.LOGOUT\n   \n});\n\n\n\n\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport LoginForm from '../../components/Auth/LoginForm'\nimport { login } from '../../actions/auth'\nimport { authErrors, isAuthenticated } from '../../reducers/index'\n\nimport \"./Auth.css\"\n\nconst Login = (props) => {\n\n  return (\n       <LoginForm {...props}/>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  errors: authErrors(state),\n  isAuthenticated: isAuthenticated(state)\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n\n  onSubmit: (username, password) => dispatch(login(username, password)),\n\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from 'react'\nimport { Alert, Button, Card, Form } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\"\n\nimport TextField from './TextField'\nimport './LoginForm.css'\nimport { signup } from \"../../actions/auth\";\nimport { authErrors, isAuthenticated } from \"../../reducers\";\nimport { connect } from \"react-redux\";\n\nexport class SignUpForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    emailCorrect: false,\n    more8: false,\n    less20: false,\n    oneCapital: false,\n    oneNumber: false,\n    passwdEquals: true,\n    formCorrect: false,\n    changedAfterSubmit: true\n  }\n\n\n  handleInputChange = (event, validation) => {\n    let check;\n    const target = event.target,\n      value = target.type ===\n      'checkbox' ? target.checked : target.value,\n      name = target.name\n    this.setState({\n      [name]: value,\n      changedAfterSubmit: true\n    });\n\n    switch (validation) {\n      case 'email':\n        check = this.validateEmail(value) && this.validatePassword(this.state.password)\n\n        break;\n\n      case 'password':\n        check = this.validatePassword(value) && this.validateEmail(this.state.username)\n        break;\n    }\n    this.setState({ formCorrect: check });\n  }\n\n  validateEmail = (value) => {\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let result = re.test(String(value).toLowerCase());\n    this.setState({ emailCorrect: result });\n    return result\n  }\n\n  validatePassword = (value) => {\n\n    let newState = {\n      more8: true,\n      oneLowerCase: true,\n      oneUpperCase: true,\n      oneNumber: true,\n      passwdEquals: true\n    }\n\n    let res = true\n    const value_lenght = value.length;\n\n    // Check #1: Should be more than 8\n    if ((value_lenght < 8) || (value_lenght > 20)) {\n      newState.more8 = false;\n      res = false;\n    }\n    if (value === value.toUpperCase()) {\n      newState.oneLowerCase = false;\n      res = false;\n    }\n    if (value === value.toLowerCase()) {\n      newState.oneUpperCase = false;\n      res = false;\n    }\n\n\n    if (!value.match(/\\d+/g)) {\n      newState.oneNumber = false;\n      res = false;\n    }\n    this.setState(newState);\n    return res\n\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault()\n    this.props.onSubmit(this.state.username, this.state.password)\n    this.setState({ changedAfterSubmit: false })\n  }\n\n\n  render() {\n    const errors = this.props.errors || {}\n    return (\n\n      <div className={'container-group'}>\n     \n      <Card className={'signup-panel'}>\n            <h2 className={'welcome-text'} style={{marginBottom: 0, marginTop: 10, textAlign: 'left'}}>Log into MicroCRM</h2>\n            <div style={{marginBottom: 20, textAlign: 'left'}}>Have already account? &nbsp;<Link to={'/login/'}>Log in</Link></div>\n\n            <Form onSubmit={this.onSubmit}>\n            \n              {\n                ((errors.length>0) && (!this.state.changedAfterSubmit))?\n                <Alert color=\"danger\">\n                    {errors}\n                </Alert>:\"\"\n              }\n            <TextField name=\"username\"\n                        placeholder=\"E-mail\" \n                        error={errors.username}\n                        onChange={(event) => this.handleInputChange(event, 'email')}\n                        className=\"login-input\" />\n\n             <Form.Control\n                        name=\"password\"\n                        type=\"password\"\n                        value={this.state.value}\n                        placeholder=\"Password\"\n                        onChange={(event) => this.handleInputChange(event, 'password')}\n                        className=\"login-input\"\n                    />\n\n              <Form.Label />\n\n              <Form.Label style={{color: (this.state.emailCorrect) ? '#009900' : '#777777', margin: '10px 0 0 0'}}>\n                  Correct email as username\n              </Form.Label><br/>\n\n              <Form.Label style={{color: (this.state.more8) ? '#009900' : '#777777', margin: 0 }}>\n                  Password should be more 8 and less 20 symbols\n              </Form.Label><br/>\n\n              <Form.Label style={{color: (this.state.oneUpperCase) ? '#009900' : '#777777', margin: 0}}>\n                  At least one upper case letter\n              </Form.Label><br/>\n\n              <Form.Label style={{color: (this.state.oneLowerCase) ? '#009900' : '#777777', margin: 0}}>\n                  At least one lower case letter\n              </Form.Label><br/>\n\n              <Form.Label style={{color: (this.state.oneNumber) ? '#009900' : '#777777', margin: '0 0 10px 0'}}>\n                  Should be one number\n              </Form.Label><br/>\n\n              <Button type=\"submit\"\n                      size=\"lg\"\n                      className=\"login-button\"\n                      disabled={!this.state.formCorrect}>\n                  Sign Up\n              </Button><br/><br/>\n            </Form>\n      </Card>\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  errors: authErrors(state),\n  isAuthenticated: isAuthenticated(state)\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (username, password) => dispatch(signup(username, password))\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm);\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { signup } from '../../actions/auth'\nimport { authErrors, isAuthenticated, getSignupSuccess } from '../../reducers/index'\nimport SignUpForm from '../../components/Auth/SignUpForm'\nimport Login from './Login'\n\n\nconst SignUp = (props) => {\n\n  //if (props.isAuthenticated) goTo(Login, props);\n\n  if (props.signup_success === undefined || !props.signup_success) {\n      return <div className=\"login-page\">\n          <SignUpForm {...props}/>\n      </div>\n  }\n\n  return \"You were sucessfully signup\"\n\n}\n\nconst mapStateToProps = (state) => ({\n  errors: authErrors(state),\n  isAuthenticated: isAuthenticated(state),\n  signup_success: getSignupSuccess(state)\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (username, password) => dispatch(signup(username, password))\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from \"react\";\nimport queryString from 'query-string'\nimport { Redirect } from \"react-router-dom\";\nimport { authErrors, isAuthenticated } from \"../../reducers\";\nimport { oauthAuthenticate } from \"../../actions/auth\";\nimport {connect} from \"react-redux\";\n\n\nexport class GoogleAuthComplete extends React.Component {\n\n    render () {\n\n        const values = queryString.parse(this.props.location.search)\n        console.log(\"CODE\", values.code) // \"top\"\n\n        if (values.code) {\n            this.props.onCodeRecevived('google-oauth2', values.code)\n            return <Redirect to={GoogleAuthComplete}/>\n        }\n\n        return (\n            <div>\n\n                Google Auth Complete\n\n\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n  errors: authErrors(state),\n  isAuthenticated: isAuthenticated(state)\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n\n  onCodeRecevived: (provider, code) => { dispatch(oauthAuthenticate(provider, code)) }\n\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GoogleAuthComplete);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n//import DevicesList from '../../containers/Devices/DevicesList'\n\nconst Page404 = () => {\n    return (<React.Fragment>\n                <h1> Page not Found </h1><br />\n                <p>You can open\n                    {/*    <Link component={App}>Devices List</Link> */}\n                </p>\n            </React.Fragment>\n            );\n\n\n\n}\n\nexport default Page404;","import { RSAA } from 'redux-api-middleware';\nimport { getFullAPIAddress } from '../utils/api'\nimport { withAuth } from '../reducers';\nimport * as actions from './actions';\nimport {getApiById} from \"../utils/api\";\n\n\nexport const getDataLoaderList = (api, resource, params) => {\n    const url = getFullAPIAddress(api, params);\n\n    console.log(\"QQQ5\", params)\n    return {\n        [RSAA]: {\n            endpoint: url ,\n            method: 'GET',\n            headers: withAuth({ 'Content-Type': 'application/json' }),\n            types: [{\n                    type: actions.DATA_LOADER_LIST_REQUEST,\n                    meta: { resource: resource, query: params.query }\n                },\n            {\n                type: actions.DATA_LOADER_LIST_SUCCESS,\n                meta: { resource: resource, query: params.query }\n            },\n            {\n                type: actions.DATA_LOADER_LIST_FAILURE,\n                meta: { resource: resource, query: params.query }\n            }]\n    }\n    }\n};\n\nexport const updateDataLoaderList = (api, resource, params) => {\n    return {\n        [RSAA]: {\n            endpoint: getFullAPIAddress(api, params),\n            method: 'GET',\n            headers: withAuth({ 'Content-Type': 'application/json' }),\n            types: [{\n                type: actions.DATA_LOADER_LIST_UPDATE_REQUEST,\n                meta: { resource: resource, query: params.query }\n            },\n                {\n                    type: actions.DATA_LOADER_LIST_SUCCESS,\n                    meta: { resource: resource, query: params.query }\n                },\n                {\n                    type: actions.DATA_LOADER_LIST_FAILURE,\n                    meta: { resource: resource, query: params.query }\n                }]\n        }\n    }\n};\n\nexport const getDataLoaderDetail = (api, resource, id, update, params) => {\n\n    //let add_params = (params == undefined) ? \"/\" : \"/\" + params;\n\n    const updateRequest = (update) ? actions.DATA_LOADER_DETAIL_UPDATE : actions.DATA_LOADER_DETAIL_REQUEST;\n\n    //console.log(\"ADD\", add_params)\n    return {\n        [RSAA]: {\n            endpoint: getApiById(api, id, params), // add_params),\n            method: 'GET',\n            headers: withAuth({ 'Content-Type': 'application/json' }),\n            types: [{\n                        type: updateRequest,\n                        meta: { resource: resource, id: id, query: params.query },\n\n                    },\n                    {\n                        type: actions.DATA_LOADER_DETAIL_SUCCESS,\n                        meta: { resource: resource, id: id, query: params.query }\n                    },\n                    {\n                        type: actions.DATA_LOADER_DETAIL_FAILURE,\n                        meta: { resource: resource, id: id, query: params.query }\n                    }]\n        }\n}};\n\nexport const updateDataLoaderDetail = (api, resource, id, data, hashSent) => {\n\n\n    console.log(\"[APC]: Update Data Loader Detail\", api, resource, id, data, hashSent);\n\n    if ((api === undefined) || (resource === undefined) || (id === undefined)) {\n        throw \"Error in updateDataLoaderDetail, wrong parameters!\\napi:\" + api + \"\\nresource: \" + resource + \"\\nid: \" + id\n    }\n\n    let headers = { 'Content-Type': 'application/x-www-form-urlencoded' }\n    if (hashSent === undefined) hashSent = 0;\n\n    // If data is not formData we change Content-Type and JSONify our data\n    if (!(data instanceof FormData)) {\n        headers = { 'Content-Type': 'application/json' }\n        data = JSON.stringify(data);\n    };\n\n    const method = (id === 'new') ? 'POST': 'PUT';\n    api = (id !== 'new')? getApiById(api, id) : getApiById(api);\n\n    console.log(\"DATA SENT:\", data);\n\n    return {\n            [RSAA]: {\n            endpoint: api,\n                method: method,\n                headers: withAuth(headers),\n                body: data,\n                types: [{\n                    type: actions.DATA_LOADER_UPLOAD_REQUEST,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                },\n                {\n                    type: actions.DATA_LOADER_DETAIL_SUCCESS,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                },\n                {\n                    type: actions.DATA_LOADER_UPLOAD_FAILURE,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                }]\n          }\n    }\n};\n\nexport const deleteDetailUpdateParent = (api, resource, id, hashSent) => {\n\n    return {\n            [RSAA]: {\n            endpoint: getFullAPIAddress(api + id + \"/\"),\n                method: 'DELETE',\n                headers: withAuth(),\n                types: [{\n                    type: actions.DATA_LOADER_DELETE_REQUEST,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                },\n                {\n                    type: actions.DATA_LOADER_DELETE_SUCCESS,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                },\n                {\n                    type: actions.DATA_LOADER_DETAIL_FAILURE,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                }]\n          }\n    }\n};\n\n\nexport const mergeDetailUpdateDetail = (api, resource, id, alias_id, hashSent) => {\n\n    const params={};\n    params.alias = alias_id;\n\n    return {\n            [RSAA]: {\n                endpoint: getApiById(api + \":id/merge/\", id, params),\n                method: 'GET',\n                headers: withAuth(),\n                types: [{\n                    type: actions.DATA_LOADER_DETAIL_UPDATE,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                },\n                {\n                    type: actions.DATA_LOADER_DETAIL_SUCCESS,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                },\n                {\n                    type: actions.DATA_LOADER_DETAIL_FAILURE,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                }]\n          }\n    }\n};\n\nexport const searchComponent = (resource, query) => (\n    {\n        type: actions.SEARCH_COMPONENT,\n        resource: resource,\n        query: query\n    }\n)\n","import React, {Component} from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport {getComponentSearch} from \"../reducers\";\nimport * as actions from \"../actions/dataLoader\";\n\n\nclass ComponentSearch extends Component {\n\n    onChange = (event) => {\n        event.preventDefault()\n        const value = event.target.value.toLowerCase();\n        console.log(\"Component Search\" + value)\n        this.props.searchComponent(this.props.resource, value);\n    }\n\n    render() {\n        return (\n            <Form.Group>\n                <Form.Control\n                    name = {\"search\"}\n                    value={this.props.componentSearch[this.props.resource]}\n                    onChange = {event => this.onChange(event)}\n                  />\n            </Form.Group>\n            );\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n     componentSearch:    getComponentSearch(state)\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n     searchComponent: (resource, query) => dispatch(actions.searchComponent(resource, query)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComponentSearch);","import React, { Component } from \"react\";\nimport {Container, Media, Col, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport {getFullAPIAddress} from \"../utils/api\";\nimport ComponentSearch from \"./ComponentSearch\";\n\n\nexport const PageHeader = (props) =>  {\n\n    let image = \"\";\n    if (props.icon) {\n        image = <a href={ getFullAPIAddress(\"/images/\" + props.icon + \"/edit/\")}>\n                <img src={ getFullAPIAddress(\"/images/get/\" + props.icon) }\n                     height={80}\n                     style={{marginRight:20}}\n                /></a>\n    }\n\n    if (props.back) {\n        image = <Link to={props.back}>Back</Link>\n    }\n\n    const searchBar = (props.searchBar) ? <ComponentSearch resource={props.resource}/> : undefined;\n\n    return (\n            <Container fluid style={{backgroundColor: \"#FAFBFC\", paddingTop: 15, paddingLeft: 40, paddingRight:40, paddingBottom: 15}}>\n                <Media>\n                    { image }\n\n                    <Media.Body >\n                        <Row>\n                            <Col sm={8}>\n                                <h3>{ props.header }</h3>\n                                <p>{ props.subHeader } </p>\n                            </Col>\n                            <Col sm={4}>\n                                {searchBar}\n                            </Col>\n                        </Row>\n                    </Media.Body>\n                </Media>\n            </Container>\n    );\n};\n\n\nexport default PageHeader;","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\n\nimport PropTypes from \"prop-types\";\n\nimport * as actions from '../../actions/dataLoader'\nimport {getComponentSearch, getDataDetails} from \"../../reducers\";\nimport * as status from \"../../status\";\n\n\nexport class DataLoaderDetails extends Component {\n\n    state = {\n        hash: 0\n    }\n\n    componentDidMount() {\n        this.updateData()\n    }\n    \n    updateData = () => {\n        // Get Resource & API call path\n        // New_api is used for loading defaults for new objects\n        const api = this.props.new_api || this.props.api;\n        const params = {query: this.props.componentSearch[this.props.resource + this.props.id]}\n        this.props.updateDetailDataLoader(api, this.props.resource, this.props.id, params);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.componentSearch[this.props.resource + this.props.id] !== prevProps.componentSearch[this.props.resource + this.props.id]) {\n                this.updateData();\n            }\n    }\n\n    render() {\n\n            const { id } = this.props;\n            const { resource }  = this.props;\n\n            if (this.props.dataDetails === undefined ||\n                this.props.dataDetails[resource] === undefined ||\n                this.props.dataDetails[resource][id] === undefined ||\n                this.props.dataDetails[resource][id].status === status.STATUS_LOADING) {\n                return \"Loading...\";\n            }\n\n            const currentDataDetails = this.props.dataDetails[resource][id];\n\n            if (currentDataDetails.status === status.STATUS_FAILURE) {\n                return \"Ooops! Something went wrong!\";\n            }\n\n            const data = currentDataDetails.data;\n\n            const { children } = this.props;\n\n            const childrenProps = {\n                data: data,\n                api: this.props.api,\n                id: id,\n                updateData: this.updateData\n\n            };\n\n            const childrenWithProps = React.Children.map(children, child =>\n              React.cloneElement(child, childrenProps)\n            );\n            return childrenWithProps;\n        }\n\n\n};\n\nDataLoaderDetails.propTypes = {\n    api: PropTypes.string.isRequired,\n    resource: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n    dataDetails:          getDataDetails(state),\n    componentSearch:    getComponentSearch(state)\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getDetailDataLoader:      (resource, api, id) => dispatch(actions.getDataLoaderDetail(resource, api, id)),\n    updateDetailDataLoader:    (resource, api, id, params) => dispatch(actions.getDataLoaderDetail(resource, api, id, true, params))\n\n});\n\n\nexport const DataLoaderDetailWrapperComponent = (props) => {\n\n    const DetailDataLoader = connect(mapStateToProps, mapDispatchToProps)(DataLoaderDetails);\n    const InputComponent = props.component;\n    const id = (props.id !== undefined) ? props.id : props.match.params.id;\n\n    //if (props.api === '/api/options/') return \"HUI\";\n\n\n    const updatedProps = {\n        ...props,\n        api: props.api,\n        resource: props.resource,\n        page: true,\n        id: id,\n        new_api: props.new_api\n\n    }\n\n    const { children } = props;\n\n    const childrenWithProps = React.Children.map(children, child =>\n          React.cloneElement(child, updatedProps)\n        );\n\n    return <DetailDataLoader {...updatedProps }>\n                {childrenWithProps}\n            </DetailDataLoader>\n}\n\n\nconst   DetailDataLoaderWrapper = (InputComponent, api, resource, new_api) => {\n\n    return class extends React.Component {\n\n        render() {\n\n            return <DataLoaderDetailWrapperComponent\n                        id={ this.props.id }\n                        api={ api }\n                        resource = { resource }\n                        component = { InputComponent }\n                        new_api = { new_api }\n                        {...this.props}\n            >\n                <InputComponent/>\n            </DataLoaderDetailWrapperComponent>\n        }\n    }\n\n};\n\n\nexport default DetailDataLoaderWrapper;","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {Form, Col} from \"react-bootstrap\";\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nimport {getOptionsList} from \"../../reducers\";\nimport * as actions from \"../../actions/typeAhead\";\n\nimport * as status from \"../../status\";\n\n\nclass AutoCompleteField extends Component {\n\n    componentDidMount() {\n        let api = this.props.api;\n        if (this.props.api_id) api = this.props.api_id(this.props.id);\n        this.props.getOptionsList(api, this.props.resource)\n    }\n\n    render() {\n\n        console.log(\"[TA] TypeAhead props\", this.props)\n        console.log(\"[TA] TypeAhead props\", this.props.resource)\n        const resource = this.props.resource;\n\n        if (this.props.optionsList === undefined ||\n            this.props.optionsList[resource] === undefined ||\n            this.props.optionsList[resource].status === status.STATUS_LOADING) {\n            return \"Loading...\";\n        }\n\n        const currentOptionsList = this.props.optionsList[resource];\n\n        if (currentOptionsList.status === status.STATUS_FAILURE) {\n            return \"Ooops! Something went wrong!\";\n        }\n\n        const fieldName = this.props.name;\n        const defaultItem = this.props.values[fieldName];\n\n        console.log(\"[TA] TypeAhead Component: Props: \", currentOptionsList.data);\n\n        return <Form.Group as={Col} md={this.props.sm}>\n                    <Form.Label>{ this.props.title }</Form.Label>\n                        <Typeahead\n                            name={fieldName}\n                            options={ currentOptionsList.data }\n                            labelKey={\"value\"}\n                            {...this.props}\n                            multiple={false}\n                            onChange={(selected) => {const value = (selected.length > 0) ? selected[0].id : ''; this.props.setFieldValue(fieldName, value); }}\n                            onBlur={ (e) => this.props.setFieldTouched(fieldName, true) }\n                            defaultSelected = {currentOptionsList.data.filter(item => item.id === defaultItem)}\n\n                        />\n        </Form.Group>\n    }\n}\n\nAutoCompleteField.propTypes = {\n    api: PropTypes.string.isRequired,\n    resource: PropTypes.string.isRequired,\n}\n\n\nconst mapStateToProps = (state) => ({\n    optionsList:          getOptionsList(state),\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n     getOptionsList:      (api, resource) => dispatch(actions.geTypeaheadOptionsList(api, resource))\n\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoCompleteField);","import { RSAA } from 'redux-api-middleware';\nimport { getFullAPIAddress } from '../utils/api'\nimport { withAuth } from '../reducers';\nimport * as actions from './actions';\n\n\nexport const geTypeaheadOptionsList = (api, resource, pagination) => ({\n    [RSAA]: {\n        endpoint: getFullAPIAddress(api),\n        method: 'GET',\n        headers: withAuth({ 'Content-Type': 'application/json' }),\n        types: [{\n                    type: actions.TYPEAHEAD_LIST_REQUEST,\n                    meta: { resource: resource, page: pagination }\n                },\n                {\n                    type: actions.TYPEAHEAD_LIST_SUCCESS,\n                    meta: { resource: resource, page: pagination }\n                },\n                {\n                    type: actions.TYPEAHEAD_LIST_FAILURE,\n                    meta: { resource: resource, page: pagination }\n                }]\n    }\n});\n","import {Col, Form} from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\n\nexport const InputField = (props) => (\n    <Form.Group as={Col} md={props.sm}>\n        <Form.Label>{props.title}</Form.Label>\n        <Form.Control\n            as={props.as}\n            type={props.type}\n            name={props.name}\n            value={props.values[props.name]}\n            onChange={props.handleChange}\n            isInvalid={!!props.errors[props.name]}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n            {props.errors[props.name]}\n        </Form.Control.Feedback>\n    </Form.Group>\n);\n\nInputField.propTypes = {\n    title: PropTypes.string.isRequired,\n    sm: PropTypes.number,\n    values: PropTypes.object.isRequired,\n    setFieldValue: PropTypes.func.isRequired\n};\n\nexport default InputField;","import {Col, Form} from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\n\nexport const CheckBoxField = (props) => {\n    return <Form.Group as={Col} md={props.sm}>\n        <Form.Label>&nbsp;</Form.Label>\n        <Form.Check\n            label={props.title}\n            {...props}\n            checked={props.values[props.name]}\n            onChange={() => props.setFieldValue(props.name, !props.values[props.name])}\n        />\n    </Form.Group>\n};\n\n\nCheckBoxField.propTypes = {\n    title: PropTypes.string.isRequired,\n    sm: PropTypes.number,\n    values: PropTypes.object.isRequired,\n    setFieldValue: PropTypes.func.isRequired\n};\n\nexport default CheckBoxField;","import {Col, Form} from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\n\nexport const SelectField = (props) => {\n\n    const options = Object.entries(props.options).map(item => <option value={item[0]}>{item[1]}</option>)\n\n    return <Form.Group as={Col} md={props.sm}>\n        <Form.Label>{props.title}</Form.Label>\n\n            <Form.Control\n                as={\"select\"}\n                type={props.type}\n                name={props.name}\n                value={props.values[props.name]}\n                onChange={props.handleChange}\n                isInvalid={!!props.errors[props.name]}>\n\n                {options}\n\n            </Form.Control>\n\n        <Form.Control.Feedback type=\"invalid\">\n            {props.errors[props.name]}\n        </Form.Control.Feedback>\n    </Form.Group>\n};\n\nSelectField.propTypes = {\n    title: PropTypes.string.isRequired,\n    sm: PropTypes.number,\n    values: PropTypes.object.isRequired,\n    setFieldValue: PropTypes.func.isRequired\n};\n\nexport default SelectField;","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router\";\nimport {Button, Form} from \"react-bootstrap\";\n\nimport {Formik} from 'formik/dist/index';\nimport * as yup from 'yup';\n\nimport {getHashUpdates} from \"../../reducers\";\nimport * as actions from \"../../actions/dataLoader\";\nimport * as status from \"../../status\";\n\nimport AutoCompleteField from './AutoCompleteField'\nimport InputField from \"./InputField\";\nimport CheckBoxField from \"./CheckBoxField\";\nimport SelectField from \"./SelectField\";\n\n\nclass FormikForm extends Component {\n\n    state = {\n        status: status.STATUS_ACTIVE,\n        hashSent: 0,\n        redirect: undefined\n    }\n\n    onSubmit = (values) => {\n\n        console.log(\"FFF-FORM\", values);\n\n        const hashSent = 'ForMIK' +  this.props.resource + this.props.id + Date();\n        this.setState({status: status.STATUS_LOADING, hashSent: hashSent})\n        this.props.updateDetail(this.props.api, this.props.resource, this.props.id, values, hashSent);\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const hash = this.state.hashSent;\n\n        if (hash === 0) return;\n        if ((this.props.hashUpdates[hash] !== undefined) && (this.state.status === status.STATUS_LOADING)) {\n            this.setState({status: status.STATUS_SUCCESS, hashSent: 0});\n            // If form has on SuccessLink we have to redirect there\n            if (this.props.onSuccessLink) { this.setState({redirect: true }) }\n\n            // otherwise we check possibility to update current view\n            if (typeof this.props.updateData === \"function\") {\n                this.props.updateData();\n            }\n\n        }\n        return\n    }\n\n    render() {\n\n        console.log(\"[FOFORM]: FormikForm Component: Props: \", this.props);\n        if (this.state.redirect) return <Redirect to={this.props.onSuccessLink}/>;\n\n        const schemaPrep = {};\n        Object.entries(this.props.fieldList).map(x => schemaPrep[x[0]] = x[1].validation);\n\n        const schema = yup.object({...schemaPrep})\n        return (\n            <Formik\n              validationSchema = {schema}\n              onSubmit = { this.onSubmit }\n              initialValues = {{ ...this.props.initialValues }}\n\n              render={ props => {\n                  const fields = Object.entries(this.props.fieldList).map(field => {\n                       const key = field[0];\n                       const value = field[1];\n                       const type = field[1].type || \"text\";\n                       const inputProps = {\n                           name: key,\n                           type: type,\n                           title: value.title,\n                           sm: value.sm || 12,\n                           key,\n                           ...props,\n                           ...field[1]\n                       }\n\n                       switch(type){\n                           case 'text':\n                           case 'password':\n                               return <InputField {...inputProps } />\n\n                           case 'select':\n                               return <SelectField {...inputProps } />\n\n                           case 'textarea':\n                               return <InputField {...inputProps } as={'textarea'}/>\n\n                           case 'autocomplete':\n                               return <AutoCompleteField {...inputProps}/>\n\n                           case 'checkbox':\n                               return <CheckBoxField {...inputProps}/>\n\n                       }\n\n                      });\n\n                  return <Form noValidate onSubmit={props.handleSubmit}>\n                      <Form.Row>\n                          { fields }\n                      </Form.Row>\n                      <Button type=\"submit\">Сохранить</Button>\n                  </Form>\n              }\n              }\n            />\n\n    );\n        }\n\n\n\n};\n\nFormikForm.propTypes = {\n\n    api: PropTypes.string.isRequired,\n    resource: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    hashUpdates:          getHashUpdates(state),\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n      updateDetail:      (api, resource, id, file, hashSent) => dispatch(actions.updateDataLoaderDetail(api, resource, id, file, hashSent)),\n\n});\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(FormikForm)\n\n","import React, { Component } from \"react\";\nimport * as Yup from 'yup';\nimport {Container} from \"react-bootstrap\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\";\nimport FormikForm from \"../../components/Forms/FormikForm\"\nimport {api, resource} from \"./_config\";\n\n\n// Todo: переделать под modal\n\nclass FormView extends Component {\n\n    render() {\n\n        const fieldsList = {\n            cost: {\n                  title: 'Стоимость',\n                  sm: 12,\n                  validation: Yup.number().required('Required')\n              },\n\n            supplier: {\n              title: 'Поставщик',\n              sm: 12,\n              type: 'autocomplete',\n              resource: 'suppliers',\n              api: '/api/suppliers/select/'\n            },\n\n            comment: {\n              title: 'Комментарий',\n              sm: 12,\n              validation: Yup.string()\n            },\n\n        };\n         \n        const backLink = \"/options/\" + this.props.data.option + \"/cont_options\";\n        return (\n            <div>\n            <PageHeader\n                header = { `Запрос цены № ${this.props.data.num} от ${this.props.data.date}` }\n                subHeader =  { this.props.data.comment }\n            />\n            <Container fluid style={{ paddingLeft: 40, paddingRight: 40}}>\n\n            <FormikForm fieldList = {fieldsList}\n                        onSubmit = {this.onSubmit}\n                        initialValues = {this.props.data}\n                        onSuccessLink = {backLink}\n                        {...this.props}\n              />\n        </Container>\n      </div>\n\n    );\n\n    }\n\n};\n\n\nexport default (props) => {\n    let new_api;\n    if ((props.match.params.id === 'new') && (props.match.params.deal_id !== undefined)) {\n       new_api = `/api/options/${props.match.params.option_id}/cont_options/`;\n    }\n\n    const Wrapper = DetailDataLoaderWrapper(FormView, api,  resource, new_api);\n    return <Wrapper {...props}/>;\n}","\n// Module configuration\nexport const resource = 'cont_options';\nexport const api = '/api/' + resource + '/';","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport queryString from 'query-string'\n\nimport * as actions from '../../actions/dataLoader'\nimport { getDataList, getComponentSearch } from \"../../reducers\";\nimport * as status from \"../../status\";\n\n\nexport class DataLoaderList extends Component {\n\n    state = {\n        hasMore: true,\n    }\n\n    componentDidMount() {\n        // Get Resource & API call path\n        const params = {query: this.props.componentSearch[this.props.resource]}\n        this.props.getListDataLoader(this.props.api, this.props.resource, params);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.componentSearch[this.props.resource] !== prevProps.componentSearch[this.props.resource]) {\n                this.updateData();\n            }\n    }\n\n    updateData = () => {\n        console.log(\"UPDATE\")\n        const params = {query: this.props.componentSearch[this.props.resource]}\n        this.props.dataLoaderUpdateList(this.props.api, this.props.resource, params);\n    }\n\n    onLoadMore = () => {\n        console.log(\"LOAD\", this.props)\n        const resource = this.props.resource;\n\n        if (this.props.dataLists === undefined ||\n            this.props.dataLists[resource] === undefined ||\n            this.props.dataLists[resource].status === status.STATUS_UPDATING) {\n            return;\n        }\n\n        const currentDataList = this.props.dataLists[resource];\n        const hasMore = (currentDataList.next !== null) & (currentDataList.next !== undefined);\n        if (this.state.hasMore != hasMore) this.setState({hasMore: hasMore});\n\n        if (currentDataList.next) {\n            // extract query from currentDataList.next\n            const getParams = queryString.parseUrl(currentDataList.next);\n            this.props.dataLoaderUpdateList(this.props.api, this.props.resource, getParams.query);\n        }\n    };\n\n    render() {\n\n            const resource = this.props.resource;\n\n            if (this.props.dataLists === undefined ||\n                this.props.dataLists[resource] === undefined ||\n                this.props.dataLists[resource].status === status.STATUS_LOADING) {\n                return \"Loading...\";\n            }\n\n            const currentDataList = this.props.dataLists[resource];\n\n            if (currentDataList.status === status.STATUS_FAILURE) {\n                return \"Ooops! Something went wrong!\";\n            }\n\n            const data = currentDataList.data;\n            const { children } = this.props;\n\n            let childrenWithProps = React.Children.map(children, child =>\n              React.cloneElement(child, {\n                  data: data,\n                  loadMore: this.onLoadMore,\n                  hasMore: this.state.hasMore,\n                  updateData: this.updateData\n              })\n            );\n\n            return childrenWithProps;\n        }\n\n\n};\n\nDataLoaderList.propTypes = {\n    api: PropTypes.string.isRequired,\n    resource: PropTypes.string.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n    dataLists:          getDataList(state),\n    componentSearch:    getComponentSearch(state)\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n     getListDataLoader:      (api, resource, query) => dispatch(actions.getDataLoaderList(api, resource, query)),\n     dataLoaderUpdateList:   (api, resource, query) => dispatch(actions.updateDataLoaderList(api, resource, query))\n\n});\n\nexport const ListDataLoader = connect(mapStateToProps, mapDispatchToProps)(DataLoaderList);\n\nexport const DataLoaderListWrapperComponent = (props) => {\n\n    const ListDataLoader = connect(mapStateToProps, mapDispatchToProps)(DataLoaderList);\n    const InputComponent = props.component;\n\n    return <ListDataLoader\n                        api={props.api}\n                        resource={props.resource}\n                        page={true}\n                        >\n                <InputComponent {...props}/>\n            </ListDataLoader>\n}\n\n\nconst DataLoaderListWrapper = (InputComponent, api, resource) => {\n\n    return class extends React.Component {\n\n        render() {\n\n            return <DataLoaderListWrapperComponent\n                        api={api}\n                        resource = {resource }\n                        component = { InputComponent }\n                        id = { this.props.id }\n                        history = {this.props.history}\n                />\n        }\n    }\n\n};\n\n\nexport default DataLoaderListWrapper;","import React, {Component} from \"react\";\n\n\nconst TableSubHeader = (props) => (\n\n    <tr>\n        <td colSpan={props.colSpan}n align={props.align}>\n            <strong>\n                <h5 style={{marginBottom: 0}}>{props.header}</h5>\n            </strong>\n        </td>\n    </tr>\n);\n\nexport default TableSubHeader","import React from 'react'\n\n\nexport function dateConverter(UNIX_timestamp){\n  let a = new Date(UNIX_timestamp * 1000);\n  let year = a.getFullYear();\n  let month = a.getMonth();\n  month = month < 10 ? '0' + month : month\n\n  let date = a.getDate();\n  date = date < 10 ? '0' + date : date\n\n  return year + '-' + month + '-' + date;\n}\n\n\nexport function toHumanDate(dateStr)\n{\n  const [year, month, day] = dateStr.split(\"-\")\n  const date = new Date(year, month-1, day);\n  return date.toLocaleDateString();\n}\n\n\nexport function rateToPrice(rate, decimals)\n{\n  decimals = (decimals===undefined)? 18: decimals;\n  return 10**(18-decimals)/rate;\n}\n\n\nexport const FormatAddress = (props) => {\n\n  const color = (props.color === undefined) ? {color: '#FFFFFF'} : {color: props.color};\n\n  return  <a href={'https://kovan.etherscan.io/' + props.address}\n                    target='_blank'\n                    style={color}>\n                    {props.address}\n          </a>\n}\n\nexport function numberWithCommas(x) {\n    if (x===undefined) return \"\";\n    const parts = x.toString().split(\".\");\n\n    return parts[0].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \") + \".\" + (parts[1] || \"00\");\n}\n\n\nexport default dateConverter;\n","import React from \"react\";\n\n/**\n * This component renders table-type views\n */\n\nfunction TableListView(props) {\n\n    const headerItems = (!props.tableHeader) ? undefined : props.tableHeader.map(item => {\n        const align = item.align || \"left\";\n        return <th width={item.width} style={{textAlign: align}}>{item.name}</th>\n        }\n    );\n\n    return <thead><tr>{headerItems}</tr></thead>;\n}\n\nexport default TableListView;","import React from \"react\";\nimport {Container, Table} from \"react-bootstrap\";\nimport TableHeader from \"./TableHeader\";\n\n/**\n * This component renders table-type views\n */\nfunction TableListView(props) {\n\n    const renderTable = <Table style={{marginTop: 14}} hover>\n                <TableHeader tableHeader={props.tableHeader} />\n                <tbody>\n                {props.items}\n                </tbody>\n            </Table>\n\n    return (\n        <Container fluid style={{ padding: 0}}>\n            {props.modalForms}\n            {props.toolbar}\n            {renderTable}\n        </Container>\n    );\n}\n\nexport default TableListView;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Button} from \"react-bootstrap\"\n\nconst ButtonLink = (props) => <Link to={props.to}>\n                                <Button size={\"sm\"} style={{marginRight: 10}}>{props.title}</Button>\n                              </Link>;\n\nexport default ButtonLink;","import React, { Component } from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {Card, Tab, Nav, Container, Row, Button, Col, CardImg, Table} from \"react-bootstrap\";\nimport TableSubHeader from \"../../components/ListViews/TableSubHeader\";\nimport {numberWithCommas} from \"../../utils/formaters\";\nimport TableListView from \"../../components/ListViews/TableListView\";\nimport ButtonLink from \"../../components/ButtonLink\";\n\n\nclass ListHelper extends Component {\n\n    /**\n     * Converts data into JSX table\n     * @param data\n     * @returns JSX table\n     */\n\n    renderItems(data) {\n         let lastYear=2100;\n\n         const items = Object.values(data)\n            .sort(this.sort)\n            .map(item => {\n                let header;\n                const year = parseInt(item.date.substr(0,4));\n                // Generates header when we found new service type\n                if (year != lastYear) {\n                    lastYear = year;\n                    header = <TableSubHeader colSpan={9} header={year} align={\"center\"}/>\n                }\n                return [ header, this.renderOneItem(item) ];\n                });\n\n         return items;\n    }\n\n    /**\n     * Sets sort criteria\n     * For this case: by Date\n     */\n\n    sort = (a,b) => (a.date > b.date) ? -1: 1;\n\n    /** Render a Line of Data  */\n\n    renderOneItem = (item) => {\n\n        const toolBar = (this.props.renderLineToolbar) ? <td>{this.props.renderLineToolbar(item.id, this.props.updateData)}</td> : undefined;\n        return <>\n            <tr onClick={() => { this.props.history.push(`/projects/${item.id}`); }} >\n                <td>{ item.date }</td>\n                <td>{ item.name }</td>\n                <td align=\"center\">{ numberWithCommas(item.budget) }</td>\n                <td align=\"center\">{ numberWithCommas(item.budget_fact) }</td>\n                <td></td>\n           </tr>\n        </>\n    };\n\n     /** Render Toolbar */\n    renderToolbar() {\n        return  <ButtonLink to={`/deals/${this.props.id}/projects/new/`} title={\"+ Add\"} />\n    }\n\n\n    /** Renders component with Infinite Scroll*/\n\n    render() {\n        const items = this.renderItems(this.props.data);\n\n        const tableHeader = [\n            {name: \"Дата\", width: \"20%\"},\n            {name: \"Назваание\", width: \"50%\"},\n            {name: \"Бюджет\", width: \"15%\", align: \"center\"},\n            {name: \"Бюджет факт\", width: \"15%\", align: \"center\"},\n        ];\n\n\n        const toolbar = this.renderToolbar();\n\n        return <TableListView toolbar={toolbar} tableHeader={tableHeader} items={items} />\n\n    }\n\n};\n\n/*\n\nDealListHelper.propTypes = {\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    sum_plan: PropTypes.string.isRequired\n};\n\n**/\n\nexport default ListHelper;\n","import React from \"react\";\nimport {Card} from \"react-bootstrap\"\n\n\nexport const WindowWidget = (props ) => (\n\n    <Card style={{backgroundColor: \"#FAFBFC\"}}>\n        <Card.Header>\n            <table width=\"100%\">\n                <tbody>\n                <tr valign=\"center\">\n                    <td>\n                        <h5 style={{margin: \"0 0 0 0\"}}>{props.title}</h5>\n                    </td>\n                    <td align=\"right\">\n                        {props.rightToolbar}\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </Card.Header>\n        <Card.Body>\n            {props.children}\n        </Card.Body>\n\n    </Card>);\n\nexport default WindowWidget;","\n// Module configuration\nexport const resource = 'deals';\nexport const api = '/api/' + resource + '/';","import React from \"react\";\nimport { Link } from \"react-router-dom\"\nimport WindowWidget from \"../../components/WindowWidget\";\nimport ButtonLink from \"../../components/ButtonLink\";\nimport {resource} from \"./_config\";\n\n\nexport const InfoWidget = (props) => {\n\n    const rightToolbar = <ButtonLink to={\"/\" + resource + \"/\" + props.id + \"/edit\"} title={\"Edit\"} />\n\n    return  <WindowWidget title={\"Info\"} rightToolbar={rightToolbar}>\n                Client: <Link to={\"/clients/\" + props.data.client}>{ props.data.client_display }</Link><br/>\n                Created at: { props.data.date }<br/>\n            </WindowWidget>\n};\n\nexport default InfoWidget;","import React from \"react\";\nimport {Nav, Container, Tab} from \"react-bootstrap\";\n\n\nfunction TabBar(props) {\n\n    const children = props.children;\n    const navItems =  React.Children.map(children, child =>\n        (<Nav.Item><Nav.Link eventKey={child.props.eventKey}>{child.props.label}</Nav.Link></Nav.Item>))\n\n    return (\n        <Tab.Container\n            activeKey={props.tab || \"info\"}\n            onSelect={key => props.history.push(\"/\" + props.resource + \"/\" + props.id + \"/\" + key)}\n        >\n            <Container fluid style={{backgroundColor: \"#FAFBFC\", paddingLeft: 40, paddingRight: 40}}>\n                <Nav variant=\"tabs\">\n                    {navItems}\n                </Nav>\n            </Container>\n\n            <Container fluid style={{paddingLeft: 40, paddingRight: 40}}>\n\n                <Tab.Content style={{marginTop: 15}}>\n                    {props.children}\n                </Tab.Content>\n\n            </Container>\n        </Tab.Container>\n    )\n}\n\nexport default TabBar;","import React from \"react\";\nimport {Button, Tab} from \"react-bootstrap\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\"\nimport ListDataLoader from \"../../components/DataLoaders/DataLoaderList\";\nimport EventListWidgetDeal from \"../Projects/ListWidgetDeal\"\nimport InfoWidget from \"./InfoWidget\";\nimport {getFullAPIAddress} from \"../../utils/api\";\nimport {api, resource} from \"./_config\"\nimport TabBar from \"../../components/TabBar/TabBar\";\n\n\nfunction DetailView(props) {\n\n    const EventsWidget = ListDataLoader(EventListWidgetDeal, api + props.id + '/events/', 'events');\n\n    return <>\n        <PageHeader\n            header={props.data.name}\n            subHeader={props.data.date}\n            icon={props.data.icon}\n        />\n\n        <TabBar id={props.id} resource={resource} tab={props.match.params.tab} history={props.history}>\n\n            <Tab.Pane eventKey=\"info\" label={\"Info\"}>\n                <InfoWidget {...props} />\n            </Tab.Pane>\n\n            <Tab.Pane eventKey=\"projects\" label={\"Projects\"}>\n                <EventsWidget id={props.id} {...props}/>\n            </Tab.Pane>\n\n            <Tab.Pane eventKey=\"finances\" label={\"Finances\"}>\n                <Button size={\"sm\"} variant={'light'}>Добавить</Button>\n            </Tab.Pane>\n\n        </TabBar>\n    </>\n};\n\nexport default DetailDataLoaderWrapper(DetailView, api, resource);","import React, { Component } from \"react\";\nimport * as Yup from 'yup';\nimport {Card, Tab, Nav, Container, Row, Button, Col, ListGroup, Form, InputGroup} from \"react-bootstrap\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\";\nimport FormikForm from \"../../components/Forms/FormikForm\"\n\n\nclass FormView extends Component {\n\n    render() {\n\n         const fieldsList = {\n          name: {\n              title: 'Название сделки',\n              sm: 6,\n              validation: Yup.string().required('Required')\n          },\n          date: {\n              title: 'Дата',\n              sm: 6,\n              validation: Yup.date('Incorrect data format').required('Должна быть введена дата')\n          },\n\n          client: {\n              title: 'Клиент',\n              type: 'autocomplete',\n              resource: 'clients',\n              api: '/api/clients/select/'\n          },\n\n          sum_plan: {\n              title: 'Сумма',\n              sm: 12,\n              validation: Yup.number().required()\n          },\n\n         official_name: {\n              title: 'Официальное название',\n              sm: 12,\n              validation: Yup.string()\n          },\n\n\n          google_drive: {\n              title: 'Google Drive',\n              sm: 12,\n              validation: Yup.string()\n          },\n\n        };\n\n        const backLink = (this.props.id !== 'new') ? \"/deals/\" + this.props.id : \"/deals\";\n\n        return (\n            <div>\n            <PageHeader\n                header = { `Сделка ${this.props.data.name} от ${this.props.data.date}` }\n                subHeader =  \"\"\n            />\n            <Container fluid style={{ paddingLeft: 40, paddingRight: 40}}>\n\n\n            <FormikForm fieldList = {fieldsList}\n                        onSubmit = {this.onSubmit}\n                        initialValues = {this.props.data}\n                        onSuccessLink = {backLink}\n                        {...this.props}\n              />\n        </Container>\n      </div>\n\n    );\n\n    }\n\n};\n\n\nconst Wrapper = DetailDataLoaderWrapper(FormView, '/api/deals/',  'deals');\nexport default Wrapper;\n","import React, {Component} from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport TableListView from \"./TableListView\";\n\n\nconst InfiniteScrollListView = (props) => {\n\n    return <InfiniteScroll page={1} loadMore={props.loadMore} hasMore={props.hasMore}>\n        <TableListView tableHeader={props.tableHeader} items={props.items} />\n    </InfiniteScroll>\n};\n\nexport default InfiniteScrollListView","import React, {Component} from \"react\";\nimport {numberWithCommas} from \"../../utils/formaters\";\nimport TableSubHeader from \"../../components/ListViews/TableSubHeader\";\nimport InfiniteScrollListView from \"../../components/ListViews/InfiniteScrollListView\";\n\n\nclass ListHelper extends Component {\n\n    /** Renders data into JSX table\n     * @param data\n     * @returns JSX table\n     */\n\n    renderItems(data) {\n         let lastYear=2100;\n         const sort = (a,b) => (a.date > b.date) ? -1 : 1;\n\n         const items = Object.values(data)\n            .sort(sort)\n            .map(item => {\n                let header;\n                const year = parseInt(item.date.substr(0,4));\n                // Generates header when we found new service type\n                if (year != lastYear) {\n                    lastYear = year;\n                    header = <TableSubHeader colSpan={9} header={year} align={\"left\"}/>\n                }\n                return [ header, this.renderOneItem(item) ];\n                });\n\n         return items;\n    }\n\n    /** Render a Line of Data  */\n    renderOneItem = (item) => {\n\n        const toolBar = (this.props.renderLineToolbar) ? <td>{this.props.renderLineToolbar(item.id, this.props.updateData)}</td> : undefined;\n        return <>\n            <tr onClick={() => { this.props.history.push(`/deals/${item.id}`) }} >\n                <td>{item.date}</td>\n                <td>{item.name}</td>\n                <td>{item.client_display}</td>\n                <td align=\"right\" style={{paddingRight: 40}}>{ numberWithCommas(item.sum_plan)}</td>\n                <td align=\"right\" style={{paddingRight: 40}}>{ numberWithCommas(item.sum_fact)}</td>\n                {toolBar}\n            </tr>\n        </>\n    };\n\n    /** Renders component with Infinite Scroll*/\n    render() {\n\n        const items = this.renderItems(this.props.data)\n\n        const tableHeader = [\n            {name: \"Data\", width: \"15%\"},\n            {name: \"Name\", width: \"40%\"},\n            {name: \"Client\", width: \"20%\"},\n            {name: \"Sum planned\", width: \"13%\", align: \"center\"},\n            {name: \"Sum fact\", width: \"13%\", align: \"center\"},\n        ];\n\n        return <InfiniteScrollListView tableHeader={tableHeader} items={items}  {...this.props}/>\n    }\n};\n\n/*\n\nDealListHelper.propTypes = {\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    sum_plan: PropTypes.string.isRequired\n};\n\n**/\n\nexport default ListHelper;","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport {ListDataLoader} from \"../../components/DataLoaders/DataLoaderList\"\nimport PageHeader from \"../../components/PageHeader\";\nimport ListHelper from \"./ListHelper\";\nimport {api, resource} from \"./_config\";\nimport ButtonLink from \"../../components/ButtonLink\";\n\n/**\n * Render Deals List Page for /deals/\n */\nclass ListView extends Component {\n\n    /**\n     * Defines Line Toolbar for delete operations\n     * @param id - id for Line\n     * @returns JSX code which will be places in <td> </td> component\n     */\n\n    renderLineToolbar = (id, updateData) => {\n        return null;\n    }\n\n    render() {\n\n        return <>\n            <PageHeader header = \"Deals\"\n                        resource={resource}\n                        searchBar\n            />\n            <Container fluid style={{paddingLeft: 40, paddingRight: 40}}>\n                <ButtonLink title={\"+ Add\"} to={\"/deals/new/edit\"}/>\n                <ListDataLoader api={api} resource={resource}>\n                    <ListHelper\n                        renderLineToolbar={this.renderLineToolbar}\n                        history={this.props.history}/>\n                </ListDataLoader>\n            </Container>\n        </>\n    }\n}\n\n\nexport default ListView;\n","import React from \"react\";\nimport {Card, Col } from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\nimport {getFullAPIAddress} from \"../../utils/api\";\n\n\nexport const ProjectCard = (props) => {\n\n    return <Col sm={6} md={4} lg={3} style={{marginBottom: 20}}>\n                <Card style={{minHeight: 340}}>\n                    <Card.Img top width=\"100%\" src={ getFullAPIAddress(\"/images/get/\" + props.icon) } alt=\"Card image cap\" />\n                    <Card.Body>\n                      <Card.Title>\n                          <Link to={\"/projects/\" + props.id }>\n                          { props.name }\n                          </Link>\n                      </Card.Title>\n                      <Card.Text>{ props.date } </Card.Text>\n                      <Card.Text>\n                        <small className=\"text-muted\">Last updated 3 mins ago</small>\n                      </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Col>\n};\n\n\nProjectCard.propTypes = {\n    icon: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    date: PropTypes.string.isRequired\n};\n\n\nexport default ProjectCard;","\n// Module configuration\nexport const resource = 'projects';\nexport const api = '/api/' + resource + '/';","import React, { Component } from \"react\";\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nimport ListDataLoader from \"../../components/DataLoaders/DataLoaderList\"\nimport PageHeader from \"../../components/PageHeader\";\nimport ProjectCard from \"./ProjectCard\"\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport {api, resource} from \"./_config\";\n\nclass ListView extends Component {\n\n    render() {\n\n        console.log(this.resource)\n        let prev_date = \"2100-01\";\n        const items = Object.values(this.props.data)\n            .sort((a,b) => {\n                if (a.date > b.date) return -1;\n                return 1;\n            })\n            .map(item => {\n                const month_date = item.date.substr(0, 7)\n                if (prev_date > month_date) {\n                    prev_date = month_date\n                    return <>\n                            <Col sm={12}>{month_date}</Col>\n                        <ProjectCard\n                            key={\"EC\" + item.id}\n                            {...item}/>\n                    </>\n                }\n                return <ProjectCard\n                            key={\"EC\" + item.id}\n                            {...item}/>\n                        });\n\n        return (\n            <div>\n            <PageHeader\n                header = \"Projects\"\n                subHeader = \"SubHeader\"\n                resource={resource}\n                searchBar\n            />\n            <Container fluid style={{paddingLeft: 40, paddingRight: 40}}>\n\n                <InfiniteScroll\n                    page={1}\n                    loadMore={this.props.loadMore}\n                    hasMore = {this.props.hasMore}\n\n                    >\n                     <Row>\n                        {items}\n                    </Row>\n                </InfiniteScroll>\n\n            </Container>\n\n            </div>\n        );\n\n        }\n\n};\n\n\n\nexport default ListDataLoader(ListView, api, resource);","import { RSAA } from 'redux-api-middleware';\n\nimport * as actions from \"./actions\";\nimport {getApiById} from \"../utils/api\";\nimport {withAuth} from \"../reducers\";\n\n\nexport const createForm = (formId, api) => {\n\n    return {\n        [RSAA]: {\n            endpoint: getApiById(api),\n            method: 'GET',\n            headers: withAuth({ 'Content-Type': 'application/json' }),\n            types: [{\n                        type: actions.FORMS_NEW_REQUEST,\n                        meta: { formId: formId },\n\n                    },\n                    {\n                        type: actions.FORMS_NEW_SUCCESS,\n                        meta: { formId: formId }\n                    },\n                    {\n                        type: actions.FORMS_HIDE,\n                        meta: { formId: formId }\n                    }]\n        }\n}};\n\nexport const showForm = (formId, data) => (\n    {\n        type: actions.FORMS_SHOW,\n        formId: formId,\n        data: data\n    }\n);\n\nexport const hideForm = (formId) => (\n    {\n        type: actions.FORMS_HIDE,\n        formId: formId,\n    }\n)\n\nexport const showConfirmation = (data) => (\n    {\n        type: actions.CONFIRMATION_SHOW,\n        data: data\n    }\n);\n\nexport const hideConfirmation = () => (\n    {\n        type: actions.CONFIRMATION_HIDE,\n    }\n)\n\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Container, Modal } from \"react-bootstrap\";\nimport { connect } from \"react-redux\"\nimport * as actions from \"../../actions/modals\";\nimport {getShowForms} from \"../../reducers\";\nimport FormikForm from \"./FormikForm\";\n\n\nclass FormikModal extends Component {\n    \n\n    handleClose =() => {\n        const { formId } = this.props;\n        this.props.hideForm(formId);\n    };\n\n    onDataUpdate = () => {\n        this.handleClose();\n        if (this.props.updateData) this.props.updateData();\n    };\n\n    render() {\n\n        const { formId } = this.props;\n        const formShow = (this.props.dataForms[formId]) ? this.props.dataForms[formId].show : false;\n        const formData = (this.props.dataForms[formId]) ? this.props.dataForms[formId].data : undefined;\n        const id = (formData) ? formData.id : undefined;\n\n        console.log(\"[FOM]: FormikModal form data:\", formData);\n\n        return (\n            <>\n            <Modal show={formShow} onHide={this.handleClose} centered size={\"lg\"}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{ this.props.title }</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FormikForm fieldList={this.props.fieldList}\n                                initialValues={formData}\n                                updateData={this.onDataUpdate}\n                                api={this.props.api}\n                                resource={this.props.resource}\n                                id={id}\n\n                    />\n                </Modal.Body>\n            </Modal>\n            </>\n        );\n      }\n}\n\n\nFormikModal.propTypes = {\n\n    formId: PropTypes.string,\n    fieldsList: PropTypes.object,\n    data: PropTypes.object,\n    title: PropTypes.string,\n    hideForm: PropTypes.func,\n    dataForms: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n    dataForms:  getShowForms(state),\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n     hideForm: (formId) => dispatch(actions.hideForm(formId))\n\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormikModal);","\n// Module configuration\nexport const resource = 'finances';\nexport const api = '/api/' + resource + '/';","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as Yup from 'yup';\nimport FormikModal from \"../../components/Forms/FormikModal\"\nimport {api, resource} from \"./_config\";\n\n/**\n * Finances Forms describes form for finance module\n *\n */\n\nclass FormModal extends Component {\n\n    render() {\n\n        const fieldsList = {\n            name: {\n                title: 'Основание платежа',\n                validation: Yup.string().required()\n            },\n\n            contractor: {\n                title: 'Подрядчик',\n                type: 'autocomplete',\n                resource: 'suppliers',\n                api: '/api/suppliers/select/'\n            },\n\n            service_type: {\n                title: 'Тип',\n                sm: 8,\n                type: 'autocomplete',\n                resource: 'service_type',\n                api: '/api/config/service_types/'\n            },\n\n            date: {\n                title: 'Дата операции',\n                sm: 4,\n                validation: Yup.date('Incorrect data format')\n            },\n\n            projected_sum: {\n                title: 'Бюджет',\n                sm: 6,\n                validation: Yup.number()\n            },\n\n            payment_type: {\n                title: 'Тип оплаты',\n                sm: 6,\n                type: 'select',\n                resource: 'payment_types',\n                options: {\n                    NC: 'безнал.',\n                    CA: 'нал.',\n                    IR: 'внутр. аренда',\n                    WH: 'склад',\n                    CQ: 'чек',\n                    R1: 'Резерв 1',\n                    R2: 'Резерв 2. Райфф',\n                    GP: 'ГПД'\n                },\n                api: '/api/config/payment_types/'\n            },\n\n            planned_sum: {\n                title: 'Планируемая сумма',\n                sm: 6,\n                validation: Yup.number()\n            },\n\n            sum: {\n              title: 'Факт',\n              sm: 6,\n              validation: Yup.number()\n            },\n\n        };\n\n        return (\n\n            <FormikModal fieldList = {fieldsList}\n                         api = {api}\n                         resource = {resource}\n                         formId={this.props.formId}\n                         updateData={this.props.updateData}\n            />\n         );\n\n    }\n\n};\n\nFormModal.propTypes = {\n    formId: PropTypes.string\n}\n\nexport default FormModal","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MdDelete } from \"react-icons/md/index\";\nimport {connect} from \"react-redux\"\nimport * as actions from \"../../actions/modals\";\nimport * as actionsD from \"../../actions/dataLoader\";\n\n\nfunction DeleteDialog(props) {\n\n    const confirmationDialogSettings = {\n        title: \"Подтвердите удаление\",\n        body: `Вы действительно собираетесь удалить запись ${props.id} ? Восстановление будет невозможно!`,\n        buttonActionName: \"Удалить\",\n        hashPrefix: 'DELETE',\n        onAction: (hash) => props.deleteItem(props.api, props.resource, props.id, hash),\n        updateData: props.updateData\n    }\n\n    return <MdDelete onClick={() => props.showConfirmation(confirmationDialogSettings) } />\n}\n\nDeleteDialog.propTypes = {\n\n    api: PropTypes.string.isRequired,\n    resource: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    showConfirmation: PropTypes.func.isRequired,\n    updateData: PropTypes.func\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n     showConfirmation: (data) => dispatch(actions.showConfirmation(data)),\n     deleteItem: (api, resource, id, hashSent) => dispatch(actionsD.deleteDetailUpdateParent(api, resource, id, hashSent)),\n});\n\nexport default connect(null, mapDispatchToProps)(DeleteDialog);","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport {Card, Tab, Nav, Container, Row, Button, Col, CardImg, Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport { MdEdit } from \"react-icons/md/index\";\nimport FormModal from \"./FormModal\";\nimport {numberWithCommas} from \"../../utils/formaters\";\nimport * as actions from \"../../actions/modals\";\nimport TableListView from \"../../components/ListViews/TableListView\";\nimport TableSubHeader from \"../../components/ListViews/TableSubHeader\";\nimport DeleteDialog from \"../../components/DataUpdaters/DeleteDialog\";\nimport {api, resource} from \"./_config\";\n\n/**\n * FinanceList manages whole finance table\n *\n * @author: Mikhail Lazarev\n */\n\nclass ListView extends Component {\n\n    /**\n     * Converts data into JSX table\n     * @param data\n     * @returns JSX table\n     */\n\n    renderItems(data) {\n         let service_num=0, counter=0, sub_counter=1;\n\n         const items = Object.values(data)\n            .sort(this.sort)\n            .map(item => {\n                let header;\n\n                // Generates header when we found new service type\n                if (item.service_type > service_num) {\n                    service_num = item.service_type;\n                    sub_counter=1;\n                    counter++;\n                    header = <TableSubHeader colSpan={9}\n                                             header={item.service_type_display}\n                                             align={\"center\"}/>\n                }\n                const num = counter + \".\" + sub_counter++ + \".\";\n                return [ header, this.renderOneItem(num, item) ];\n                });\n\n         return items;\n    }\n\n    /** Sort items lambda function */\n    sort = (a,b) => (a.service_type > b.service_type) ? 1: -1;\n\n    /** Render Items (with header if needed) */\n    renderOneItem = (num, item) => {\n\n        const funcShowForm = () => this.props.showForm(\"financeModal\", item);\n        \n        return <tr>\n            <td>{ num }</td>\n            <td onClick={funcShowForm}>{ item.name }</td>\n            <td onClick={funcShowForm}>{ item.contractor_display }</td>\n            <td onClick={funcShowForm} align=\"center\">{ item.qty }</td>\n            <td onClick={funcShowForm} align=\"center\">{ numberWithCommas(item.official_sum)}</td>\n            <td align=\"center\">{ item.payment_type_display}</td>\n            <td align=\"right\">{ numberWithCommas(item.projected_sum)}</td>\n            <td align=\"right\">{ numberWithCommas(item.planned_sum)}</td>\n            <td align=\"right\">{ numberWithCommas(item.sum)}</td>\n            <td>\n                <MdEdit onClick={funcShowForm} />\n                <DeleteDialog api={api} resource={resource} id={item.id} updateData={this.props.updateData} />\n            </td>\n        </tr>\n\n    };\n\n    /** Render Toolbar */\n    renderToolbar = () => (\n            <Button size={\"sm\"}\n                    onClick={() => this.props.createForm(\"financeModal\", \"/api/finance_set/\" + this.props.data.id + \"/finances/new/\")}>\n                + Добавить</Button>\n    );\n\n    /** Render component function */\n    render() {\n\n        const data = (this.props.data.f_items !== undefined) ? this.props.data.f_items : this.props.data;\n        const modalForms =  <FormModal formId={\"financeModal\"} updateData={this.props.updateData} />\n        const toolbar = this.renderToolbar();\n\n        const tableHeader = [\n            {name: \"#\", width: \"1%\"},\n            {name: \"Основание платежа\", width: \"25%\"},\n            {name: \"Подрядчик\", width: \"14%\"},\n            {name: \"Кол-во\", width: \"10%\", align: \"center\"},\n            {name: \"Оф. цена\", width: \"10%\", align: \"center\"},\n            {name: \"Тип\", width: \"10%\", align: \"center\"},\n            {name: \"План\", width: \"10%\", align: \"center\"},\n            {name: \"Договор\", width: \"10%\", align: \"center\"},\n            {name: \"Оплачено\", width: \"10%\", align: \"center\"},\n            {name: \"\", width: \"8%\", align: \"center\"},\n        ];\n\n        const items = this.renderItems(data);\n\n        return <TableListView modalForms={modalForms} toolbar={toolbar} tableHeader={tableHeader} items={items} />\n\n    }\n\n};\n\nconst mapDispatchToProps = dispatch => ({\n     createForm:      (formId, api) => dispatch(actions.createForm(formId, api)),\n     showForm:      (formId, data) => dispatch(actions.showForm(formId, data))\n\n});\n\n\nexport default connect(null, mapDispatchToProps)(ListView);\n","import React from \"react\";\nimport {Card, Col } from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\nimport {getFullAPIAddress} from \"../../utils/api\";\n\n\nexport const ServiceCard = (props) => {\n\n    return <Col sm={6} md={4} lg={3} style={{marginBottom: 20}}>\n                <Card style={{minHeight: 340}}>\n                    <Card.Img top width=\"100%\" src={ getFullAPIAddress(props.icon) } alt=\"Card image cap\" />\n                    <Card.Body>\n                      <Card.Title>\n                          <Link to={\"/services/\" + props.id }>\n                          { props.name }\n                          </Link>\n                      </Card.Title>\n                      <Card.Text>{ props.date } </Card.Text>\n                      <Card.Text>\n                        <small className=\"text-muted\">Last updated 3 mins ago</small>\n                      </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Col>\n};\n\n\nServiceCard.propTypes = {\n    icon: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    date: PropTypes.string.isRequired\n};\n\n\nexport default ServiceCard;","import React from \"react\";\nimport {Card, Col } from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\nimport {getFullAPIAddress} from \"../../utils/api\";\n\n\nexport const ServiceCard = (props) => {\n\n    return <Col sm={6} md={4} lg={3} style={{marginBottom: 20}}>\n                <Card style={{minHeight: 340, backgroundColor: \"#FFFFEE\"}}>\n                    <Card.Img top width=\"100%\" src={ getFullAPIAddress(props.icon) } alt=\"Card image cap\" />\n                    <Card.Body>\n                      <Card.Title>\n                          <Link to={\"/services/group/\" + props.id }>\n                          { props.name }\n                          </Link>\n                      </Card.Title>\n                      <Card.Text>{ props.date } </Card.Text>\n                      <Card.Text>\n                        <small className=\"text-muted\">Last updated 3 mins ago</small>\n                      </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Col>\n};\n\n\nServiceCard.propTypes = {\n    icon: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    date: PropTypes.string.isRequired\n};\n\n\nexport default ServiceCard;","import React, { Component } from \"react\";\nimport {Card, Tab, Nav, Container, Row, Button, Col, ListGroup,Form} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\";\nimport ServiceCard from \"../Services/ServiceCard\";\nimport GroupCard from \"./GroupCard\";\nimport {api, resource} from \"./_config\";\n\n\nclass GroupDetail extends Component {\n\n    get_items(data, type) {\n\n        return  Object.values(data)\n            .map(item => {\n\n                if (type === 'group') {\n                    return <GroupCard\n                            key={\"EC\" + item.id}\n                            {...item}/>\n\n                }\n\n                return <ServiceCard\n                    key={\"EC\" + item.id}\n                    {...item}/>\n\n                });\n    }\n\n\n    render() {\n\n        console.log(\"GROUPP\", this.props.data)\n\n        const groups = this.get_items(this.props.data.groups, 'group')\n        const services = this.get_items(this.props.data.services, 'service')\n\n        let header = this.props.data.name;\n\n        if (this.props.data.parent_group) {\n            header = <>\n                        { this.props.data.name }&nbsp;\n                        <Link to={\"/services/group/\" + this.props.data.parent_group}>..</Link>\n                     </>;\n        }\n\n\n        return (\n                <div>\n                    <PageHeader\n                        header={header}\n                        subHeader= {this.props.data.job}\n                        resource={resource + this.props.id}\n                        searchBar\n                    />\n\n                    <Container fluid style={{paddingLeft: 40, paddingRight: 40}}>\n\n                        <Row>\n                            {groups} {services}\n                        </Row>\n\n                    </Container>\n\n                </div>\n                );\n\n                }\n\n};\n\nexport default DetailDataLoaderWrapper(GroupDetail, api, resource)","\n// Module configuration\nexport const resource = 'groups';\nexport const api = '/api/' + resource + '/';","import React, { Component } from \"react\";\nimport { Button, Container, Modal, Form } from \"react-bootstrap\";\nimport { connect } from \"react-redux\"\nimport { MdEdit } from \"react-icons/md\";\nimport * as actions from \"../../actions/dataLoader\";\nimport * as status from \"../../status\";\nimport {getHashUpdates} from \"../../reducers\";\nimport GroupDetail from \"../Groups/GroupDetail\";\nimport \"./Modal.css\"\n\nclass ServiceSelectModal extends Component {\n\n    state = {\n      show: false,\n        };\n\n    handleClose =() => {\n        this.setState({ show: false });\n    }\n\n    handleShow = () => {\n        this.setState({ show: true });\n    }\n\n    onDataUpdate = () => {\n        this.handleClose()\n        this.updateData()\n    }\n\n  render() {\n\n    const { children } = this.props;\n\n    const childrenWithProps = React.Children.map(children, child =>\n          React.cloneElement(child, { onClick: this.handleShow })\n        );\n\n    return (\n      <>\n          {childrenWithProps }\n\n          <Modal\n            show={this.state.show}\n            onHide={this.handleClose}\n            dialogClassName={\"modal-90w\"}\n\n        >\n          <Modal.Header closeButton >\n            <Modal.Title>Услуги</Modal.Title>\n              <Form.Control>\n\n              </Form.Control>\n          </Modal.Header>\n          <Modal.Body>\n              <GroupDetail id={\"service_root\"} {...this.props} />\n          </Modal.Body>\n\n        </Modal>\n      </>\n    );\n  }\n}\n\n\n\n\nexport default ServiceSelectModal;","import React, { Component } from \"react\";\nimport * as Yup from 'yup';\nimport FormikModal from \"../../components/Forms/FormikModal\";\nimport {getApiById} from \"../../utils/api\";\nimport { MdEdit } from \"react-icons/md\";\nimport {api, resource} from \"./_config\";\n\n\nclass FormModal extends Component {\n\n    render() {\n\n        const fieldsList = {\n            /*option: {\n              title: 'Опция',\n              type: 'autocomplete',\n              resource: 'budget_options',\n              api_id: (id) => getApiById(api + ':id/options/', id)\n            },*/\n            qty: {\n              title: 'Дата договора',\n              sm: 6,\n              validation: Yup.number().required()\n            },\n\n            price: {\n              title: 'Закупочная цена',\n              validation: Yup.number().required()\n\n            },\n\n            cost: {\n              title: 'Закупочная цена',\n              validation: Yup.number().required()\n            },\n\n            comment: {\n              title: 'Комментарий',\n              validation: Yup.string()\n            },\n\n        };\n\n        return <FormikModal fieldList={fieldsList}\n                         api={api}\n                         resource={resource}\n                         formId={this.props.formId}\n                         updateData={this.props.updateData}\n            />\n\n    }\n\n};\n\n\nexport default FormModal;","\n// Module configuration\nexport const resource = 'budget_items';\nexport const api = '/api/' + resource + '/';","import React from \"react\";\nimport {Button, Modal} from \"react-bootstrap\";\n\n\nfunction Confirmation(props) {\n    return (\n        <Modal show={props.show} onHide={props.onCancel}>\n            <Modal.Header closeButton>\n                <Modal.Title>{props.title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{props.body}</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.onCancel}>\n                    Отменить\n                </Button>\n                <Button variant=\"danger\" onClick={props.onAction}>\n                    {props.actionName}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\n\nexport default Confirmation;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\"\nimport { MdDelete } from \"react-icons/md/index\";\nimport * as actions from \"../../actions/dataLoader\";\nimport * as status from \"../../status\";\nimport {getHashUpdates} from \"../../reducers\";\nimport Confirmation from \"../Confirmation\"\n\n\nclass UpdateWithConfirmation extends Component {\n\n    state = {\n        show: false,\n        hashSent: 0\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        const hash = this.state.hashSent;\n        if (hash === 0) return;\n        if (this.props.hashUpdates[hash] !== undefined) {\n            this.setState({ hashSent: 0})\n            if ((this.props.onSuccessURL) && (this.props.history)) {\n                this.props.history.push(this.props.onSuccessURL)\n            } else {\n                this.props.updateData()\n            }\n        }\n    }\n\n    handleClose = () => this.setState({ show: false });\n    handleShow = () => this.setState({ show: true });\n\n    handleDelete = () => {\n        this.handleClose()\n        const hashSent = this.props.hashPrefix +  this.props.api + this.props.id + Date();\n        this.setState({status: status.STATUS_LOADING, hashSent: hashSent})\n        this.props.onAction(hashSent)\n    }\n\n    render() {\n        const ButtonComponent = this.props.buttonComponent;\n\n        return (\n            <>\n                <ButtonComponent onClick={this.handleShow} />\n\n                <Confirmation\n                    title={this.props.title}\n                    body={this.props.body}\n                    show={this.state.show}\n                    onCancel={this.handleClose}\n                    onAction={this.handleDelete}\n                    actionName={this.props.actionName}\n                    />\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    hashUpdates:          getHashUpdates(state),\n});\n\n\nexport default connect(mapStateToProps, null)(UpdateWithConfirmation);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\"\nimport { MdDelete } from \"react-icons/md/index\";\nimport * as actions from \"../../actions/dataLoader\";\nimport UpdateWithConfirmation from \"./UpdateWithConfirmation\"\n\n\nclass DeleteDialog_OLD extends Component {\n\n  render() {\n    console.log(\"FOFOFO\", this.props)\n    return (\n        <UpdateWithConfirmation\n            title={\"Подтвердите удаление\"}\n            body={`Вы действительно собираетесь удалить запись ${this.props.id} ? Восстановление будет невозможно!`}\n            buttonComponent={MdDelete}\n            actionName={\"Удалить\"}\n            onAction={(hash) => this.props.deleteItem(this.props.api, this.props.resource, this.props.id, hash)}\n            hashPrefix={'DELETE'}\n            {...this.props}\n        />\n    );\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n     deleteItem:      (api, resource, id, hashSent) => dispatch(actions.deleteDetailUpdateParent(api, resource, id, hashSent)),\n});\n\n\nexport default connect(null, mapDispatchToProps)(DeleteDialog_OLD);","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Button} from \"react-bootstrap\";\nimport * as actions from \"../../actions/dataLoader\";\nimport UpdateWithConfirmation from \"../../components/DataUpdaters/UpdateWithConfirmation\";\n\n\nclass CreateFinanceDialog extends Component {\n    render() {\n\n        const buttonComponent = \"AAA\";\n        //[<Button size={\"sm\"} style={{marginRight: 10}}>Создать финансы</Button>];\n\n        return <UpdateWithConfirmation\n                title={\"Подтвердите объединение\"}\n                body={`Вы действительно собираетесь объединить запись ${this.props.id} с ${this.props.alias_id} ? Восстановление будет невозможно!`}\n                buttonComponent={buttonComponent}\n                actionName={\"Объединить\"}\n                onAction={(hash) => this.props.mergeItem(this.props.api, this.props.resource, this.props.id, this.props.alias_id, hash)}\n                hashPrefix={'MERGE'}\n                {...this.props}\n            />\n\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n     mergeItem: (api, resource, id, alias_id, hashSent) => dispatch(actions.mergeDetailUpdateDetail(api, resource, id, alias_id, hashSent)),\n});\n\n\nexport default connect(null, mapDispatchToProps)(CreateFinanceDialog);","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport {Container, Button, Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport { MdEdit } from \"react-icons/md/index\";\nimport ServiceSelectModal from \"../Services/ServiceSelectModal\";\n\nimport {numberWithCommas} from \"../../utils/formaters\";\nimport FormModal from \"./FormModal\";\nimport DeleteDialog from \"../../components/DataUpdaters/DeleteDialog_OLD\";\nimport CreateFinancesDialog from \"./CreateFinancesDialog\"\nimport TableListView from \"../../components/ListViews/TableListView\";\nimport TableSubHeader from \"../../components/ListViews/TableSubHeader\";\n\nimport * as actions from \"../../actions/dataLoader\";\nimport {api, resource} from \"./_config\";\n\n\nclass ListWidgetEvent extends Component {\n\n    /**\n     * Render data into JSX table\n     * @param data\n     * @param internal - show internal costs or customers prices\n     * @param alt - alternative budget positions\n     * @returns JSX table\n     */\n\n    renderItems(data, internal, alt) {\n         let service_num=0, counter=0, sub_counter=1;\n\n         // Sort items lambda function\n         const sort = (a,b) => (a.service_type > b.service_type) ? 1: -1;\n\n         const items = Object.values(data)\n            .filter(item => item.alt===alt)\n            .sort(sort)\n            .map(item => {\n                let header;\n\n                // Generates header when we found new service type\n                if (item.service_type > service_num) {\n                    service_num = item.service_type;\n                    sub_counter=1;\n                    counter++;\n                    header = <TableSubHeader colSpan={9} header={item.service_type_display} align={\"center\"}/>\n                }\n\n                const num = counter + \".\" + sub_counter++ + \".\";\n                return [header, this.renderOneItem(num, item, internal)]\n                });\n\n         return items\n    }\n\n    /** Render Items (with header if needed) */\n    renderOneItem(num, item, internal) {\n\n        const funcLinkOption = () => this.props.showForm(\"budgetModal\", item);\n\n        return <tr>\n                <td>{ num }</td>\n                <td><Link to={\"/services/\" + item.service}>{ item.service_display }</Link></td>\n                <td><Link to={\"/options/\" + item.option}>{ item.option_display }</Link></td>\n\n                <td align=\"center\">{ (internal) ? numberWithCommas(item.cost) : numberWithCommas(item.price) }</td>\n                <td align=\"center\">{ numberWithCommas(item.qty) }</td>\n                <td align=\"center\">{ item.measure_display }</td>\n                <td align=\"center\">{ (internal) ? numberWithCommas(item.total_cost) : numberWithCommas(item.total_price) }</td>\n                <td>\n                    <MdEdit onClick={funcLinkOption} />\n                    <DeleteDialog\n                        api={api}\n                        id={item.id}\n                        updateData = { this.props.updateData }\n                    />\n                </td>\n           </tr>\n\n    }\n\n    /** Render Toolbar */\n    renderToolbar = () => (\n        <>\n            <ServiceSelectModal>\n                <Button size={\"sm\"} style={{marginRight: 10}}>+ Добавить</Button>\n            </ServiceSelectModal>\n             <a href={`http://localhost:8000/budgets/${this.props.data.id}/export_tz/`}>\n                <Button size={\"sm\"} style={{marginRight: 10}}>Скачать ТЗ</Button>\n            </a>\n            <a href={`http://localhost:8000/budgets/${this.props.data.id}/export_budget/`}>\n                <Button size={\"sm\"} style={{marginRight: 10}}>Скачать смету</Button>\n            </a>\n            {/*<CreateFinancesDialog api={api} resource={resource} id={this.props.id}/>*/}\n        </>)\n\n    /** Render Component */\n    render() {\n\n        const internal = (this.props.int===undefined) ? true: this.props.int;\n        const modalForms =  <FormModal formId={\"financeModal\"} updateData={this.props.updateData} />\n        const main_items = this.renderItems(this.props.data.b_items, internal, false);\n        const alt_items = this.renderItems(this.props.data.b_items, internal, true);\n\n        const tableHeader = [\n            {name: \"#\", width: \"1%\"},\n            {name: \"Услуга\", width: \"25%\"},\n            {name: \"Опция\", width: \"25%\"},\n            {name: \"Цена\", width: \"11%\", align: \"center\"},\n            {name: \"Кол-во\", width: \"11%\", align: \"center\"},\n            {name: \"Ед. изм.\", width: \"9%\", align: \"center\"},\n            {name: \"Итого\", width: \"10%\", align: \"center\"},\n            {name: \"\", width: \"8%\", align: \"center\"},\n        ];\n        const toolbar = this.renderToolbar();\n\n        return <>\n                 <TableListView modalForms={modalForms} toolbar={toolbar} tableHeader={tableHeader} items={main_items} />\n                 <br /><br />\n                 <h4>Дополнительно</h4><br />\n                 <TableListView tableHeader={tableHeader} items={alt_items} />\n              </>\n    }\n\n};\n\nconst mapDispatchToProps = dispatch => ({\n     getListDataLoader:      (api, resource, query) => dispatch(actions.getDataLoaderList(api, resource, query)),\n\n});\n\nexport default connect(null, mapDispatchToProps)(ListWidgetEvent);","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport DeleteDialog from \"../../components/DataUpdaters/DeleteDialog_OLD\";\nimport FormModal from \"./FormModal\";\nimport {api} from \"./_config\";\n\nexport const BudgetLine = (props) => {\n // ['id', 'name', 'date', 'state', 'sum_plan'\n    return <tr>\n                <td>{ props.num }</td>\n                <td style={{paddingRight: 20}}><strong>{ props.service_display_name }</strong><br />\n                { props.option_display_name }\n                </td>\n                <td align=\"left\" style={{paddingRight: 20}}>{ (props.tz) }</td>\n                <td>\n                    {/*<OptionFormModal id={props.option} style={{paddingRight: 15}}/>*/}\n                    <FormModal data={props} style={{paddingRight: 15}}/>\n                    <DeleteDialog\n                        api={api}\n                        id={props.id}\n                        updateData = { props.updateData }\n                    />\n                </td>\n           </tr>\n};\n\n\n\nexport const BudgetHeader = (props) => {\n // ['id', 'name', 'date', 'state', 'sum_plan'\n    return <thead>\n                <tr>\n                    <th width=\"2%\">#</th>\n                    <th width=\"24%\">Услуга</th>\n                    <th width=\"70%\" style={{textAlign: 'center'}}>Цена</th>\n                    <th width=\"4%\" style={{textAlign: 'center'}}></th>\n                </tr>\n           </thead>\n};\n\n\nBudgetLine.propTypes = {\n    int: PropTypes.bool.isRequired,\n\n    id: PropTypes.number.isRequired,\n    num: PropTypes.string.isRequired,\n    service_display_name: PropTypes.string.isRequired,\n    option_display_name: PropTypes.string.isRequired,\n    price: PropTypes.string.isRequired,\n    cost: PropTypes.string.isRequired,\n    comment: PropTypes.string.isRequired\n\n}\n\nexport default BudgetLine;","import React, { Component } from \"react\";\nimport {Card, Tab, Nav, Container, Row, Button, Col, CardImg, Table} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport ServiceSelectModal from \"../Services/ServiceSelectModal\";\nimport BudgetLineTZ, {BudgetHeader} from \"./BudgetLineTZ\";\n\n\nclass BudgetList extends Component {\n\n    budget_items(data, internal) {\n        let service_num=0, counter=0, sub_counter=1;\n        return data .sort((a,b) => {\n                if (a.service_type > b.service_type) return 1;\n                return -1;\n            })\n            .map(item => {\n                let header;\n                if (item.service_type > service_num) {\n                    service_num = item.service_type;\n                    sub_counter=1;\n                    counter++;\n\n                    header = <tr style={{backgroundColor: \"#FAFAFF\"}}>\n                                <td colSpan={9} align=\"center\" style={{paddingTop: 12, paddingBottom: 14}}>\n                                    <strong>{item.service_type_display_name}</strong>\n                                </td>\n                            </tr>\n                }\n                return (\n                    <React.Fragment key={\"ECD\" + item.id}>\n                        { header }\n                        <BudgetLineTZ\n                        num = { counter + \".\" + sub_counter++ + \".\" }\n                        int = { internal }\n                        {...item}\n                    />\n                    </React.Fragment>);\n    });\n\n\n    }\n\n    render() {\n\n        const internal = (this.props.int===undefined) ? true: this.props.int;\n\n        const main_budget = this.budget_items(Object.values(this.props.data.b_items).filter(item => !item.alt), internal);\n        const alt_budget = this.budget_items(Object.values(this.props.data.b_items).filter(item => item.alt), internal);\n\n\n        return (\n            <div>\n            <Container fluid>\n                <ServiceSelectModal>\n                    <Button size={\"sm\"} style={{marginRight: 10}}>+ Добавить</Button>\n                </ServiceSelectModal>\n                 <a href={`http://localhost:8000/budgets/${this.props.data.id}/export_tz/`}>\n                    <Button size={\"sm\"} style={{marginRight: 10}}>Скачать ТЗ</Button>\n                </a>\n                 <a href={`http://localhost:8000/budgets/${this.props.data.id}/export_budget/`}>\n                    <Button size={\"sm\"}>Скачать смету</Button>\n                </a>\n\n\n                <Table style={{marginTop: 14}} hover size={'sm'}>\n                    <BudgetHeader/>\n                    <tbody>{ main_budget }</tbody>\n                </Table>\n                <br /><br /><br />\n                <h4>Дополнительно</h4>\n                 <Table style={{marginTop: 14}} hover>\n                    <BudgetHeader/>\n                    <tbody>{ alt_budget }</tbody>\n                </Table>\n            </Container>\n\n\n            </div>\n        );\n\n        }\n\n};\n\n\n\nexport default BudgetList;","import React from \"react\";\nimport { Link } from \"react-router-dom\"\nimport WindowWidget from \"../../components/WindowWidget\";\nimport {api, resource} from \"./_config\";\nimport ButtonLink from \"../../components/ButtonLink\";\nimport {ListGroup} from \"react-bootstrap\";\n\n\nexport const InfoWidget = (props) => {\n\n    const rightToolbar = <ButtonLink to={\"/\" + resource + \"/\" + props.id + \"/edit\"} title={\"Edit\"} />;\n\n    return  <WindowWidget title={\"Info\"} rightToolbar={rightToolbar}>\n        <ListGroup variant=\"flush\">\n            <ListGroup.Item><p style={{whiteSpace: 'pre-line'}}>{ props.data.description }</p></ListGroup.Item>\n              <ListGroup.Item> Deal: <Link to={\"/deals/\" + props.data.deal}>{ props.data.deal_display }</Link><br/>\n                Deadline: { props.data.date }<br/>\n                GitHub: { props.data.github }<br/>\n                Landing page: { props.data.landing_url }<br/>\n                Video: { props.data.video_url } <br/></ListGroup.Item>\n        </ListGroup>\n\n            </WindowWidget>\n\n};\n\nexport default InfoWidget;","import React from \"react\";\nimport { ListGroup, Button, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\"\nimport WindowWidget from \"../../components/WindowWidget\";\n\n\nexport const DocumentsWidget = (props) => {\n\n    const rightToolbar = <Link to={\"/events/\" + props.id + \"/edit\"}><Button size={\"sm\"}>Edit</Button></Link>\n\n    return <WindowWidget title={\"Документы\"}>\n                         <ListGroup variant=\"flush\">\n  <ListGroup.Item>Cras justo odio</ListGroup.Item>\n  <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n  <ListGroup.Item>Morbi leo risus</ListGroup.Item>\n  <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n  <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\n</ListGroup>;\n                     </WindowWidget>\n\n};\n\nexport default DocumentsWidget;","import React from \"react\";\nimport {Col, Row, Tab} from \"react-bootstrap\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\"\nimport FinanceList from \"../Finances/ListView\";\nimport BudgetList from \"../Budgets/ListWidgetEvent\";\n\nimport BudgetTZ from \"../Budgets/ListWidgetEventTZ\";\nimport InfoWidget from \"./InfoWidget\";\nimport StatWidget from \"./StatWidget\";\nimport {api, resource} from \"./_config\";\nimport TabBar from \"../../components/TabBar/TabBar\";\n\n\nfunction DetailView(props) {\n\n    return (\n        <>\n            <PageHeader\n                header={props.data.name}\n                subHeader={props.data.value_proposition}\n                icon={props.data.icon}\n            />\n\n            <TabBar id={props.id} resource={resource} tab={props.match.params.tab} history={props.history}>\n\n                <Tab.Pane eventKey=\"info\" label={\"Info\"}>\n                    <Row>\n                        <Col sm={8}><InfoWidget {...props}/></Col>\n                        <Col sm={4}><StatWidget {...props}/></Col>\n                    </Row>\n                </Tab.Pane>\n                 <Tab.Pane eventKey=\"bmc\" label={\"BMC\"}>\n                    <Row>\n                        <Col sm={8}><InfoWidget {...props}/></Col>\n                        <Col sm={4}><StatWidget {...props}/></Col>\n                    </Row>\n                </Tab.Pane>\n                 <Tab.Pane eventKey=\"features\" label={\"Features\"}>\n                    <Row>\n                        <Col sm={8}><InfoWidget {...props}/></Col>\n                    </Row>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"hypotheses\" label={\"Hypotheses\"}>\n                    <Row>\n                        <Col sm={8}><InfoWidget {...props}/></Col>\n                    </Row>\n                </Tab.Pane>\n\n                <Tab.Pane eventKey=\"budget\" label={\"Budget\"}>\n                    <BudgetList {...props} int={false} data={props.data.budgetSet}/>\n                </Tab.Pane>\n\n                <Tab.Pane eventKey=\"finances\" label={\"Finances\"}>\n                    <FinanceList id={props.id} {...props} data={props.data.financeSet}/>\n                </Tab.Pane>\n\n            </TabBar>\n        </>\n    );\n\n};\n\nexport default DetailDataLoaderWrapper(DetailView, api, resource);","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport * as Yup from 'yup';\n\nimport PageHeader from \"../../components/PageHeader\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\";\nimport FormikForm from \"../../components/Forms/FormikForm\"\n\nimport {api, resource} from \"./_config\";\n\nclass FormView extends Component {\n\n    render() {\n\n        const fieldsList = {\n            name: {\n                  title: 'Name',\n                  sm: 12,\n                  validation: Yup.string().required('Required')\n            },\n\n            value_proposition: {\n                  title: 'Value proposition',\n                  sm: 12,\n                  validation: Yup.string().required('Required')\n            },\n\n            date: {\n                  title: 'Deadline',\n                  sm: 12,\n                  validation: Yup.date('Incorrect data format').required('Должна быть введена дата')\n              },\n\n            budget: {\n              title: 'Budget',\n              sm: 6,\n              validation: Yup.number().required()\n            },\n\n            budget_fact: {\n              title: 'Budget fact',\n              sm: 6,\n              validation: Yup.number().required()\n            },\n\n            description: {\n                  title: 'Description',\n                  type: 'textarea',\n                  sm: 12,\n                  validation: Yup.string()\n            },\n            github: {\n                  title: 'Github',\n                  sm: 12,\n                  validation: Yup.string().url()\n            },\n        };\n\n        const backLink = (this.props.id === 'new') ? \"/deals/\" + this.props.data.deal : \"/projects/\" + this.props.id;\n        return <>\n                <PageHeader\n                    header = { `Мероприятия по сделке ${this.props.data.deal_display} от ${this.props.data.date}` }\n                    subHeader =  { this.props.data.comment }\n                />\n                <Container fluid style={{ paddingLeft: 40, paddingRight: 40}}>\n                    <FormikForm fieldList = {fieldsList}\n                                onSubmit = {this.onSubmit}\n                                initialValues = {this.props.data}\n                                onSuccessLink = {backLink}\n                                {...this.props}\n                      />\n                </Container>\n              </>\n\n    }\n\n};\n\n\nexport default (props) => {\n    let new_api;\n    if ((props.match.params.id === 'new') && (props.match.params.deal_id !== undefined)) {\n       new_api = `/api/deals/${props.match.params.deal_id}/events/`;\n    }\n\n    const Wrapper = DetailDataLoaderWrapper(FormView, api,  resource, new_api);\n    return <Wrapper {...props}/>;\n}","\n// Module configuration\nexport const resource = 'options';\nexport const api = '/api/' + resource + '/';","import React from \"react\";\n\nimport WindowWidget from \"../../components/WindowWidget\";\nimport ButtonLink from \"../../components/ButtonLink\";\n\nimport { numberWithCommas } from \"../../utils/formaters\";\nimport {resource} from \"./_config\";\n\n\nexport const InfoWidget = (props) => {\n\n    const rightToolbar = <ButtonLink to={\"/\" + resource + \"/\" + props.id + \"/edit\"} title={\"Edit\"} />;\n\n    return  <WindowWidget title={\"Информация\"} rightToolbar={rightToolbar}>\n                Официальное название: { props.data.name }<br/>\n                Внутреннее название: { props.data.int_name }<br/>\n                Цена для Клиента: { numberWithCommas(props.data.price) } <br/>\n                Закупочная цена: { numberWithCommas(props.data.cost) } <br/>\n                ТЗ:<br/> { props.data.tz } <br/>\n            </WindowWidget>\n\n};\n\nexport default InfoWidget;\n","import React, { Component } from \"react\";\nimport * as Yup from 'yup';\n\nimport FormikModal from \"../../components/Forms/FormikModal\";\nimport {api, resource} from \"./_config\";\n\n\nclass FormModal extends Component {\n\n    render() {\n\n        const fieldsList = {\n            supplier: {\n              title: 'Поставщик',\n              sm: 12,\n              type: 'autocomplete',\n              resource: 'suppliers',\n              api: '/api/suppliers/select/'\n            },\n\n            cost: {\n                  title: 'Стоимость',\n                  sm: 12,\n                  validation: Yup.number().required('Required')\n              },\n\n            comment: {\n              title: 'Комментарий',\n              sm: 12,\n              validation: Yup.string()\n            },\n\n        };\n         \n        return  <FormikModal fieldList={fieldsList}\n                         api={api}\n                         resource={resource}\n                         formId={this.props.formId}\n                         updateData={this.props.updateData}\n            />\n\n    }\n\n};\n\nexport default FormModal;","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {Button} from \"react-bootstrap\";\n\nimport {numberWithCommas} from \"../../utils/formaters\";\nimport TableListView from \"../../components/ListViews/TableListView\";\nimport DeleteDialog from \"../../components/DataUpdaters/DeleteDialog_OLD\";\nimport FormModal from \"./FormModal\";\nimport * as actions from \"../../actions/modals\";\n\n\n/**\n * ContOptionList manages whole finance table\n *\n * @author: Mikhail Lazarev\n */\n\nclass ContOptionList extends Component {\n\n    /**\n     * Converts data into JSX table\n     * @param data\n     * @returns JSX table\n     */\n\n    renderItems(data) {\n         let num=0;\n\n         const items = Object.values(data)\n            .sort(this.sort)\n            .map(item => this.renderOneItem(num++, item)\n                );\n\n         return items;\n    }\n\n    /** Sort items lambda function */\n\n    sort = (a,b) => (a.last_update > b.last_update) ? -1: 1;\n\n    /** Render Items (with header if needed) */\n\n    renderOneItem(num, item) {\n\n        const funcLinkOption = () => this.props.showForm(\"contOptionsModal\", item);\n\n        return  <tr >\n\n                <td><Link to={\"/suppliers/\" + item.supplier}>{ item.supplier_display }</Link></td>\n                <td onClick={ funcLinkOption } align=\"center\">{ numberWithCommas(item.cost) }</td>\n                <td onClick={ funcLinkOption } align=\"center\">{ item.last_update }</td>\n                <td onClick={ funcLinkOption } align=\"center\">{ item.user_updated_display }</td>\n                <td onClick={ funcLinkOption } align=\"center\">{ item.phone }</td>\n                <td onClick={ funcLinkOption }>{ item.comment }</td>\n\n                <td>\n                    <DeleteDialog\n                        api={'/api/cont_options/'}\n                        id={item.id}\n                        updateData = { this.props.updateData }\n                        />\n                </td>\n           </tr>\n    }\n\n\n    /** Render Toolbar */\n    renderToolbar = () => (\n        <Button size={\"sm\"}\n                onClick={() => this.props.createForm(\"contOptionsModal\",\n                    \"/api/cont_options_set/\" + this.props.data.id + \"/cont_options/new/\")}>\n            + Добавить</Button>\n    );\n\n    /** Render component function */\n\n    render() {\n\n        const items = this.renderItems(this.props.data.cont_options);\n\n        const tableHeader = [\n            {name: \"Подрядчик\", width: \"35%\"},\n            {name: \"Внутр. цена\", width: \"15%\", align: \"center\"},\n            {name: \"Дата обновления\", width: \"15%\", align: \"center\"},\n            {name: \"Кто обновил\", width: \"20%\", align: \"center\"},\n            {name: \"Телефон\", width: \"15%\", align: \"center\"},\n        ];\n\n        const modalForms =  <FormModal formId={\"contOptionsModal\"} updateData={this.props.updateData}/>\n        const toolbar = this.renderToolbar();\n\n       return <TableListView modalForms={modalForms} toolbar={toolbar} tableHeader={tableHeader} items={items} />\n    }\n\n};\n\nconst mapDispatchToProps = dispatch => ({\n     createForm:      (formId, api) => dispatch(actions.createForm(formId, api)),\n     showForm:      (formId, data) => dispatch(actions.showForm(formId, data))\n\n});\n\n\nexport default connect(null, mapDispatchToProps)(ContOptionList);\n","import React from \"react\";\nimport {Tab} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\";\nimport InfoWidget from \"./InfoWidget\";\nimport ContOptionsList from \"../ContOptions/ListWidget\"\nimport BudgetList from \"../Budgets/ListWidgetEvent\";\nimport {api, resource} from \"./_config\";\nimport TabBar from \"../../components/TabBar/TabBar\";\n\n\nfunction DetailView(props) {\n\n    let content_tab;\n\n    if ((props.data.type === 's') && (props.data.cont_optionSet)) {\n        content_tab = <Tab.Pane eventKey=\"cont_options\" label={\"Поставщики\"}>\n            <ContOptionsList {...props} data={props.data.cont_optionSet}/>\n        </Tab.Pane>\n    } else {\n        content_tab = <Tab.Pane eventKey=\"budget\" label={\"Смета\"}>\n            <BudgetList {...props} int={true} data={props.data.budgetSet}/>\n        </Tab.Pane>\n    }\n\n    const service_display = <Link to={\"/services/\" + props.data.service}>{props.data.service_display}</Link>\n\n    return (\n        <>\n            <PageHeader\n                header={props.data.name}\n                subHeader={service_display}\n            />\n            <TabBar id={props.id} resource={resource} tab={props.match.params.tab || 'info'} history={props.history}>\n\n                <Tab.Pane eventKey=\"info\" label={\"Инфо\"}>\n                    <InfoWidget data={props.data} id={props.id} {...props}/>\n                </Tab.Pane>\n                {content_tab}\n\n                <Tab.Pane eventKey=\"operations\" label={\"Операции\"}>\n\n                </Tab.Pane>\n            </TabBar>\n        </>\n    );\n\n};\n\nexport default DetailDataLoaderWrapper(DetailView, api, resource);","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport * as Yup from 'yup';\n\nimport PageHeader from \"../../components/PageHeader\";\nimport FormikForm from \"../../components/Forms/FormikForm\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\";\nimport {api, resource} from \"./_config\";\n\n\nclass FormView extends Component {\n\n    render() {\n\n         const fieldsList = {\n          name: {\n              title: 'Название',\n              sm: 12,\n              validation: Yup.string().required('Required')\n          },\n          int_name: {\n              title: 'Внутреннее название',\n              sm: 12,\n              validation: Yup.string()\n          },\n\n          price: {\n              title: 'Цена для Клиента',\n              sm: 6,\n              validation: Yup.number().required()\n          },\n\n\n          cost: {\n              title: 'Закупочная цена',\n              sm: 6,\n              validation: Yup.number().required()\n          },\n\n          /*\n          measure: {\n              title: 'Единица измерения',\n              type: 'autocomplete',\n              resource: 'measure',\n              api: '/api/select/measure/'\n          },\n          */\n\n         service: {\n              title: 'Услуга',\n              type: 'autocomplete',\n              resource: 'services',\n              api: '/api/services/select/'\n          },\n\n          tz: {\n              title: 'ТЗ',\n              type: 'textarea',\n              validation: Yup.string()\n          },\n\n        };\n\n        const backLink = (this.props.id === 'new') ? \"/services/\" + this.props.data.service + \"/options\": \"/options/\" + this.props.id;\n        return <>\n                <PageHeader\n                    header = { `Опция к услуге ${this.props.data.service_display}` }\n                    subHeader =  { this.props.data.comment }\n                />\n                <Container fluid style={{ paddingLeft: 40, paddingRight: 40}}>\n                    <FormikForm fieldList = {fieldsList}\n                                onSubmit = {this.onSubmit}\n                                initialValues = {this.props.data}\n                                onSuccessLink = {backLink}\n                                {...this.props}\n                      />\n                </Container>\n              </>\n\n    }\n\n};\n\n\nexport default (props) => {\n    let new_api;\n    if ((props.match.params.id === 'new') && (props.match.params.service_id !== undefined)) {\n       new_api = `/api/services/${props.match.params.service_id}/options/`;\n    }\n\n    const Wrapper = DetailDataLoaderWrapper(FormView, api,  resource, new_api);\n    return <Wrapper {...props}/>;\n}","import React, { Component } from \"react\";\nimport {Card, Tab, Nav, Container, Row, Button, Col, CardImg, Table} from \"react-bootstrap\";\nimport { Link }from \"react-router-dom\";\n\nimport {numberWithCommas} from \"../../utils/formaters\";\nimport DeleteDialog from \"../../components/DataUpdaters/DeleteDialog_OLD\";\nimport TableListView from \"../../components/ListViews/TableListView\";\nimport ButtonLink from \"../../components/ButtonLink\";\n\n\n\n/**\n * OptionList manages whole finance table\n *\n * @author: Mikhail Lazarev\n */\n\nclass ListWidget extends Component {\n\n    /**\n     * Converts data into JSX table\n     * @param data\n     * @returns JSX table\n     */\n\n    renderItems(data) {\n         let num=0;\n\n         const items = Object.values(data)\n            .sort(this.sort)\n            .map(item => this.renderOneItem(num++, item)\n                );\n\n         return items;\n    }\n\n    /**\n     * Sort items lambda function\n     *\n     * For finances we use service_type to group items by service type\n     *\n     */\n\n    sort = (a,b) => {\n        if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n        return -1;\n    }\n\n\n    /** Render Items (with header if needed) */\n\n    renderOneItem(num, item) {\n\n        const funcLinkOption = () => this.props.history.push(`/options/${item.id}`);\n\n        return  <tr  >\n                <td onClick={ funcLinkOption }>{item.int_name}</td>\n                <td onClick={ funcLinkOption }>{item.name}</td>\n                <td onClick={ funcLinkOption } style={{textAlign: 'center'}}>{item.measure_display_name}</td>\n                <td onClick={ funcLinkOption } align=\"center\">{ numberWithCommas(item.price) }</td>\n                <td onClick={ funcLinkOption } align=\"center\">{ numberWithCommas(item.cost) }</td>\n                <td align=\"center\">\n                    <DeleteDialog\n                        api={'/api/options/'}\n                        id={item.id}\n                        updateData = { this.props.updateData }/>\n                </td>\n           </tr>\n    }\n\n\n    /** Render Toolbar */\n    renderToolbar() {\n        return  <ButtonLink to={`/services/${this.props.id}/options/new/`} title={\"+ Добавить\"} />\n    }\n\n    /** Render component function */\n\n    render() {\n\n        const items = this.renderItems(this.props.data);\n\n        const tableHeader = [\n            {name: \"Внутр. название\", width: \"23%\"},\n            {name: \"Название\", width: \"40%\"},\n            {name: \"Ед. изм\", width: \"14%\", align: \"center\"},\n            {name: \"Внутр. цена\", width: \"14%\", align: \"center\"},\n            {name: \"Цена\", width: \"14%\", align: \"center\"},\n        ];\n\n        const toolbar = this.renderToolbar();\n\n        return <TableListView toolbar={toolbar} tableHeader={tableHeader} items={items} />\n    }\n\n};\n\n\nexport default ListWidget;\n","import React from \"react\";\nimport WindowWidget from \"../../components/WindowWidget\";\nimport ButtonLink from \"../../components/ButtonLink\";\nimport {resource} from \"./_config\";\n\nexport const InfoWidget = (props) => {\n\n    const rightToolbar = <ButtonLink to={\"/\" + resource + \"/\" + props.id + \"/edit\"} title={\"Edit\"} />\n\n    return  <WindowWidget title={\"Информация\"} rightToolbar={rightToolbar}>\n                Название: {props.data.name} <br/>\n                ИНН: {props.data.INN} <br/>\n                Предмет договора: {props.data.comment} <br/>\n                Плательщик: {props.data.payer_display_name} <br/>\n                ГПД: {props.data.gpd}<br/>\n                Сумма: {props.data.sum}<br/>\n            </WindowWidget>\n\n};\n\nexport default InfoWidget;","import React from \"react\";\nimport {Link} from \"react-router-dom\"\nimport {Button, Card, Col, Container, ListGroup, Row} from \"react-bootstrap\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\";\nimport {api, resource} from \"./_config\";\nimport InfoWidget from \"./InfoWidget\";\n\n\nconst DetailView = (props) => {\n\n    return (\n        <div>\n            <PageHeader\n                header={`Договор № ${props.data.num} от ${props.data.date}`}\n                subHeader={props.data.comment}\n                back={\"/events/\" + props.data.parent + \"/docs\"}\n            />\n            <Container fluid style={{paddingLeft: 40, paddingRight: 40, paddingTop: 10}}>\n\n                <Link to={\"/\" + props.resource + \"/\" + props.id + \"/edit/\"}>\n                    <Button size={\"sm\"}>Редактировать</Button>\n                </Link>&nbsp;\n\n                <Row>\n                    <Col sm={8}><InfoWidget {...props}/></Col>\n                </Row>\n\n            </Container>\n\n\n        </div>\n    );\n\n};\n\nexport default DetailDataLoaderWrapper(DetailView, api, resource);","\n// Module configuration\nexport const resource = 'payers';\nexport const api = '/api/' + resource + '/';","import React, { Component } from \"react\";\nimport * as Yup from 'yup';\nimport {Card, Tab, Nav, Container, Row, Button, Col, ListGroup, Form, InputGroup} from \"react-bootstrap\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\";\nimport FormikForm from \"../../components/Forms/FormikForm\"\n\nimport {api, resource} from \"./_config\";\n\n\nclass FormView extends Component {\n\n    render() {\n\n        const fieldsList = {\n            name: {\n                title: 'Название',\n                validation: Yup.string().required('Required'),\n                is_company: true,\n                is_person: false,\n                is_enterpreneur: false\n            },\n            \n            firstName: {\n                title: 'Имя',\n                validation: Yup.string().required('Required'),\n                is_company: false,\n                is_person: true,\n                is_enterpreneur: true\n            },\n            surnameName: {\n                title: 'Фамилия',\n                validation: Yup.string().required('Required'),\n                is_company: false,\n                is_person: true,\n                is_enterpreneur: true\n            }\n            ,\n            birthday: {\n                title: 'Дата рождения',\n                validation: Yup.date(),\n                is_company: false,\n                is_person: true,\n                is_enterpreneur: false\n            },\n            \n            passport_no: {\n                title: 'Номер паспорта',\n                validation: Yup.string(),\n                sm: 6,\n                is_company: false,\n                is_person: true,\n                is_enterpreneur: false\n            },\n            \n            passport_date: {\n                title: 'Дата выдачи',\n                validation: Yup.string(),\n                sm: 6,\n                is_company: false,\n                is_person: true,\n                is_enterpreneur: false\n            },\n            \n            passport_issuer: {\n                title: 'Кем выдан',\n                validation: Yup.string(),\n\n                is_company: false,\n                is_person: true,\n                is_enterpreneur: false\n            },\n            \n            address: {\n                title: 'Адрес',\n                validation: Yup.string(),\n                is_company: true,\n                is_person: true,\n                is_enterpreneur: true},\n            \n            INN: {\n                title: 'ИНН',\n                validation: Yup.string(),\n                is_company: true,\n                is_person: true,\n                is_enterpreneur: true\n            },\n\n            KPP: {\n                title: 'КПП',\n                validation: Yup.string(),\n                is_company: true,\n                is_person: false,\n                is_enterpreneur: false\n            },\n\n            snils: {\n                title: 'СНИЛС',\n                validation: Yup.string(),\n                is_company: false,\n                is_person: true,\n                is_enterpreneur: false\n            },\n            \n            BankAccount: {\n                title: 'Банковский счет',\n                validation: Yup.string(),\n                is_company: true,\n                is_person: true,\n                is_enterpreneur: true\n            },\n\n\n            Bank: {\n                title: 'Банк',\n                validation: Yup.string(),\n\n                is_company: true,\n                is_person: true,\n                is_enterpreneur: true\n            },\n\n            BIK: {\n                title: 'БИК',\n                validation: Yup.string(),\n                is_company: true,\n                is_person: true,\n                is_enterpreneur: true\n            },\n\n            CorrespondAccount: {\n                title: 'Кор.счет',\n                validation: Yup.string(),\n                is_company: true,\n                is_person: true,\n                is_enterpreneur: true\n            },\n            \n            OGRN: {\n                title: 'ОГРН',\n                validation: Yup.string(),\n                is_company: true,\n                is_person: false,\n                is_enterpreneur: false\n            },\n            OGRNIP: {\n                title: 'ОГРНИП',\n                validation: Yup.string(),\n                is_company: false,\n                is_person: false,\n                is_enterpreneur: true\n            },\n\n            OKPO: {\n                title: 'ОКПО',\n                validation: Yup.string().required(),\n                is_company: true,\n                is_person: false,\n                is_enterpreneur: false\n            },\n            \n            dirJobTitle: {\n                title: 'Должность подписанта',\n                validation: Yup.string().required(),\n                is_company: true,\n                is_person: false,\n                is_enterpreneur: false\n            },\n\n            dirSurname: {\n                title: 'Фамилия подписанта',\n                validation: Yup.string().required(),\n                is_company: true,\n                is_person: false,\n                is_enterpreneur: false\n            },\n\n            dirFirstName: {\n                title: 'Имя подписанта',\n                validation: Yup.string().required(),\n                is_company: true,\n                is_person: false,\n                is_enterpreneur: false\n            },\n\n            proxy: {\n                title: 'Действиет на основании',\n                validation: Yup.string().required(),\n                is_company: true,\n                is_person: false,\n                is_enterpreneur: false\n            },\n\n        };\n\n        const criteria_names = {\n            1: 'is_company',\n            2: 'is_person',\n            3: 'is_enterpreneur'\n        };\n\n        const criteria = criteria_names[this.props.data.type];\n\n        Object.entries(fieldsList).filter(entry => !entry[1][criteria]).forEach(item => delete fieldsList[item[0]])\n\n        return (\n            <div>\n            <PageHeader\n                header = { `Плательщик № ${this.props.data.name}` }\n                subHeader =  { this.props.data.comment }\n            />\n            <Container fluid style={{ paddingLeft: 40, paddingRight: 40}}>\n\n            <FormikForm fieldList = {fieldsList}\n                        onSubmit = {this.onSubmit}\n                        initialValues = {this.props.data}\n                        onSuccessLink = {\"/suppliers/\" + this.props.data.parent + \"/payers\"}\n                        {...this.props}\n              />\n        </Container>\n      </div>\n\n    );\n\n    }\n\n};\n\n\nexport default (props) => {\n    let new_api;\n    if ((props.match.params.id.startsWith('new')) && (props.match.params.supplier_id !== undefined)) {\n       new_api = `/api/suppliers/${props.match.params.supplier_id}/payers/`;\n    }\n\n    const Wrapper = DetailDataLoaderWrapper(FormView, api, resource, new_api);\n    return <Wrapper {...props}/>;\n}","import React, { Component } from \"react\";\nimport GroupDetail from \"../Groups/GroupDetail\"\n\n\nclass ListView extends Component {\n\n    render() {\n\n         return <GroupDetail id={\"service_root\"} {...this.props} />\n\n        }\n\n};\n\n\n\nexport default ListView;","\n// Module configuration\nexport const resource = 'services';\nexport const api = '/api/' + resource + '/';","import React, { Component } from \"react\";\nimport * as Yup from 'yup';\nimport {Card, Tab, Nav, Container, Row, Button, Col, ListGroup, Form, InputGroup} from \"react-bootstrap\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\";\nimport FormikForm from \"../../components/Forms/FormikForm\"\nimport {api, resource} from \"./_config\";\n\n\nclass FormView extends Component {\n\n   render() {\n\n        /*\n          'name': 'Название',\n          'type': 'Тип',\n          'google_drive': 'Ссылка на диск:'\n\n\n         */\n\n        const fieldsList = {\n            name: {\n                  title: 'Название',\n                  sm: 12,\n                  validation: Yup.string().required('Required')\n              },\n\n            /*type: {\n                  title: 'Официальное название',\n                  sm: 12,\n                  validation: Yup.string()\n              },*/\n\n            google_drive: {\n                  title: 'Google Drive',\n                  sm: 12,\n                  validation: Yup.string()\n              },\n\n        };\n\n        const backLink = (this.props.id === 'new') ? \"/deals/\" + this.props.deals_id : \"/services/\" + this.props.id;\n        return (\n            <div>\n            <PageHeader\n                header = {this.props.data.name}\n                subHeader =  { this.props.data.comment }\n            />\n            <Container fluid style={{ paddingLeft: 40, paddingRight: 40}}>\n\n            <FormikForm fieldList = {fieldsList}\n                        onSubmit = {this.onSubmit}\n                        initialValues = {this.props.data}\n                        onSuccessLink = {backLink}\n                        {...this.props}\n              />\n        </Container>\n      </div>\n\n    );\n\n    }\n\n};\n\n\nexport default (props) => {\n    let new_api;\n    if ((props.match.params.id === 'new') && (props.match.params.group_id !== undefined)) {\n       new_api = `/api/groups/${props.match.params.group_id}/services/`;\n    }\n\n    const Wrapper = DetailDataLoaderWrapper(FormView, api,  resource, new_api);\n    return <Wrapper {...props}/>;\n}","import React from \"react\";\nimport WindowWidget from \"../../components/WindowWidget\";\nimport ButtonLink from \"../../components/ButtonLink\";\n\nimport { numberWithCommas } from \"../../utils/formaters\";\nimport {resource} from \"./_config\";\n\n\nexport const InfoWidget = (props) => {\n\n    const rightToolbar = <ButtonLink to={\"/\" + resource + \"/\" + props.id + \"/edit\"} title={\"Edit\"} />;\n\n    return  <WindowWidget title={\"Информация\"} rightToolbar={rightToolbar}>\n                Официальное название: { props.data.name }<br/>\n                Внутреннее название: { props.data.int_name }<br/>\n                Цена для Клиента: { numberWithCommas(props.data.price) } <br/>\n                Закупочная цена: { numberWithCommas(props.data.cost) } <br/>\n                ТЗ:<br/> { props.data.tz } <br/>\n            </WindowWidget>\n\n};\n\nexport default InfoWidget;","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport * as Yup from 'yup';\nimport {Badge, Popover, Button} from \"react-bootstrap\";\nimport { updateDataLoaderDetail } from \"../../actions/dataLoader\";\n\nimport FormikModal from \"../../components/Forms/FormikModal\"\nimport {getApiById} from \"../../utils/api\";\nimport {getHashUpdates} from \"../../reducers\";\nimport * as actions from \"../../actions/dataLoader\";\nimport * as status from \"../../status\";\n\n\nexport class GroupAddForm extends Component {\n\n    render() {\n\n        const fieldsList = {\n            group: {\n                  title: 'Новая группа',\n                  sm: 12,\n                  type: 'autocomplete',\n                  resource: 'service_groups',\n                  api: '/api/groups/select/'\n              },\n        };\n         \n        return (\n\n                <FormikModal fieldList = {fieldsList}\n                             title = {\"Добавить в группу\"}\n                             api = {\"/api/services/:id/add_to_group/\"}\n                             resourse = {'services_groups'}\n                             id = {this.props.data.id}\n                             data = {this.props.data} >\n                    <Badge variant={\"success\"}>Добавить</Badge>\n                </FormikModal>\n               );\n\n    }\n\n};\n\nclass DeleteGroupAction extends Component {\n\n\n    state = {\n        hashSent: 0\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const hash = this.state.hashSent;\n        if (hash === 0) return;\n        if ((this.props.hashUpdates[hash] !== undefined)) {\n            this.setState({hashSent: 0});\n            this.props.updateData();\n        }\n\n    }\n\n    onDelete = (service_id, group_id) => {\n        console.log(service_id, group_id)\n        const hashSent = \"DELETE \" + service_id + \"/\" + group_id + Date()\n        const api = \"/api/services/:id/remove_from_group/\"\n        const resource = 'services_groups'\n        const data = {id: service_id, group: group_id}\n        this.setState({ hashSent: hashSent})\n        this.props.updateDetail(api, resource, service_id, data, hashSent);\n    }\n\n    render() {\n        return  (\n            <Button variant={\"danger\"}\n                    size={\"sm\"}\n                    onClick={() => this.onDelete(this.props.data.id, this.props.id)}\n            >\n                Убрать\n            </Button>);\n    }\n\n\n};\n\nconst mapStateToProps = (state) => ({\n    hashUpdates:          getHashUpdates(state),\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n     updateDetail:      (api, resource, id, data, hashSent) => dispatch(updateDataLoaderDetail(api, resource, id, data, hashSent)),\n\n});\n\nconst DeleteGroupActionComponent = connect(mapStateToProps, mapDispatchToProps)(DeleteGroupAction);\n\nexport const GroupDelete = (props) => (\n\n  <Popover id=\"popover-basic\" title={\"Убрать из группы?\"}>\n      <DeleteGroupActionComponent {...props}/>\n  </Popover>\n\n);\n\n\nexport default GroupAddForm;","import React, { Component } from \"react\";\nimport {Badge, OverlayTrigger} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport GroupAddDelete, {GroupDelete} from \"./GroupAddDelete\";\n\n\nclass PopupWidget extends Component {\n\n    renderItems(data) {\n\n         const items = Object.values(data)\n            .map(item => {\n                return this.renderOneItem(item);\n                });\n\n         return items;\n    }\n\n    renderOneItem = (item) => {\n        return <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={GroupDelete(item)} delay={1000}>\n            <Link to={\"/services/group/\" + item.id}>\n                <Badge variant=\"primary\"\n                       style={{marginRight: 7}}\n                      >\n                    { item.name }\n                </Badge>\n            </Link>\n          </OverlayTrigger>\n    }\n\n    render() {\n\n        const items = this.renderItems(this.props.data.groups)\n        return <>{items}\n            <GroupAddDelete {...this.props}>AAA</GroupAddDelete>\n                </>\n\n\n        }\n\n};\n\n\n\nexport default PopupWidget;","import React from \"react\";\nimport {Button, Container, Nav, Tab} from \"react-bootstrap\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\";\nimport TabBar from \"../../components/TabBar/TabBar\";\nimport DeleteDialog from \"../../components/DataUpdaters/DeleteDialog_OLD\";\n\nimport InfoWidget from \"./InfoWidget\";\nimport OptionListService from \"../Options/ListWidget\";\nimport GroupPopupWidget from \"../Groups/PopupWidget\";\nimport {api, resource} from \"./_config\";\n\n\nfunction DetailView(props) {\n\n    const onSuccessUrlAfterDelete = (props.data.groups) ? '/services/group/' + props.data.groups[0].id : \"/services\";\n\n    return <>\n            <PageHeader\n                header={props.data.name}\n                subHeader={<GroupPopupWidget {...props} data={props.data}/>}\n            />\n            <TabBar id={props.id} resource={resource} tab={props.match.params.tab || 'info'} history={props.history}>\n\n                <Tab.Pane eventKey=\"info\" label={\"Информация\"}>\n                    <InfoWidget {...props}/>\n                </Tab.Pane>\n\n                <Tab.Pane eventKey=\"options\" label={\"Опции\"}>\n                    <OptionListService {...props} data={props.data.options}/>\n                </Tab.Pane>\n\n                <Tab.Pane eventKey=\"admin\" label={\"Админ\"}>\n                    <DeleteDialog api={api} id={props.id} onSuccessURL={onSuccessUrlAfterDelete} history={props.history}>\n                        <Button variant={\"danger\"}>Удалить</Button>\n                    </DeleteDialog>\n\n                </Tab.Pane>\n            </TabBar>\n        </>\n};\n\nexport default DetailDataLoaderWrapper(DetailView, api, resource);","import React, {Component} from \"react\";\nimport InfiniteScrollListView from \"../../components/ListViews/InfiniteScrollListView\";\nimport TableSubHeader from \"../../components/ListViews/TableSubHeader\";\n\n\nclass ListHelper extends Component {\n\n    /**\n     * Converts data into JSX table\n     * @param data\n     * @returns JSX table\n     */\n\n    renderItems(data, orderBy) {\n        let prevLetter=\"0\", sort;\n        /*\n        if (orderBy.startsWith(\"-\")) {\n            orderBy = orderBy.substr(1); // Remove \"-\" at the beginning\n            sort = (a,b) => (a[orderBy] < b[orderBy]) ? -1: 1;\n        } else sort = (a,b) => (a[orderBy] > b[orderBy]) ? -1: 1;\n        */\n        const items = Object.values(data)\n            .sort(this.sort)\n            .map(item => {\n                let header;\n                const firstLetter = (item.name!==\"\") ? item.name.substr(0, 1) : \"\";\n                // Generates header when we found new service type\n                if (firstLetter.toLowerCase() !== prevLetter.toLowerCase()) {\n                    prevLetter = firstLetter;\n                    header = <TableSubHeader colSpan={6} header={firstLetter} />\n                }\n                return [ header, this.renderOneItem(item, header) ];\n                });\n\n        return items;\n    }\n\n    /**\n     * Sets sort criteria\n     * For this case: by Name\n     */\n\n    sort = (a,b) => (a.name.toLowerCase() < b.name.toLowerCase()) ?  -1: 1;\n\n    /** Render a Line of Data  */\n\n    renderOneItem = (item) => {\n\n        const toolBar = (this.props.renderLineToolbar) ? <td>{this.props.renderLineToolbar(item.id, this.props.updateData)}</td> : undefined;\n        return <>\n            <tr key={item.id}>\n                {/* Data */}\n                <td onClick={() => {this.props.history.push(`/suppliers/${item.id}`);}}>{item.name}</td>\n                <td onClick={() => {this.props.history.push(`/suppliers/${item.id}`);}}>{item.job}</td>\n                <td onClick={() => {this.props.history.push(`/suppliers/${item.id}`);}} align=\"center\">{item.phone}</td>\n                <td onClick={() => {this.props.history.push(`/suppliers/${item.id}`);}} align=\"center\">{item.email}</td>\n                <td onClick={() => {this.props.history.push(`/suppliers/${item.id}`);}} align=\"center\">{item.website}</td>\n                {/* Toolbar */}\n                {toolBar}\n            </tr>\n        </>\n    };\n\n    /** Renders component with Infinite Scroll*/\n\n    render() {\n        const items = this.renderItems(this.props.data);\n\n        const tableHeader = [\n            {name: \"Name\", width: \"25%\"},\n            {name: \"Job\", width: \"25%\"},\n            {name: \"Phone\", width: \"25%\", align: \"center\"},\n            {name: \"Email\", width: \"25%\", align: \"center\"},\n            {name: \"Website\", width: \"25%\", align: \"center\"}\n        ];\n\n        return <InfiniteScrollListView tableHeader={tableHeader} items={items} {...this.props} />\n    }\n\n};\n\nexport default ListHelper;","\n// Module configuration\nexport const resource = 'suppliers';\nexport const api = '/api/' + resource + '/';","import React, {Component} from \"react\";\nimport {Container} from \"react-bootstrap\";\n\nimport {ListDataLoader} from \"../../components/DataLoaders/DataLoaderList\"\nimport PageHeader from \"../../components/PageHeader\";\nimport ListHelper from \"./ListHelper\";\nimport DeleteDialog from \"../../components/DataUpdaters/DeleteDialog\";\nimport {api, resource} from \"./_config\";\nimport ButtonLink from \"../../components/ButtonLink\";\n\n\n/**\n * Render Supplier List Page for /suppliers/\n */\nclass ListView extends Component {\n\n    /**\n     * Defines Line Toolbar for delete operations\n     * @param id - id for Line\n     * @returns JSX code which will be places in <td> </td> component\n     */\n\n    renderLineToolbar = (id, updateData) => {\n        return <DeleteDialog api={api} resource={resource} id={id} updateData={updateData}/>\n    }\n\n    render() {\n\n        return <>\n            <PageHeader header=\"Suppliers\"\n                        subHeader={\"SubHeader\"}\n                        resource={resource}\n                        searchBar\n            />\n            <Container fluid style={{paddingLeft: 40, paddingRight: 40}}>\n                <ButtonLink title={\"+ Add\"} to={\"/suppliers/new/edit\"}/>\n                <ListDataLoader api={api} resource={resource}>\n                    <ListHelper\n                        renderLineToolbar={this.renderLineToolbar}\n                        history={this.props.history}/>\n                </ListDataLoader>\n            </Container>\n        </>\n    }\n}\n\n\nexport default ListView;","import React from \"react\";\n\nimport WindowWidget from \"../../components/WindowWidget\";\nimport ButtonLink from \"../../components/ButtonLink\";\n\nimport {api, resource} from \"./_config\";\n\n\nconst InfoWidget = (props) => {\n\n    const rightToolbar = <ButtonLink to={\"/\" + resource + \"/\" + props.id + \"/edit\"} title={\"Edit\"} />\n\n    return  <WindowWidget title={\"Описание\"} rightToolbar={rightToolbar}>\n                        {props.data.description}\n            </WindowWidget>\n};\n\nexport default InfoWidget;","import React, { Component } from \"react\";\nimport * as Yup from 'yup';\nimport FormikModal from \"../../components/Forms/FormikModal\"\nimport {api, resource} from \"./_config\";\n\n\nclass FormModal extends Component {\n\n    render() {\n\n        const fieldsList = {\n            name: {\n                  title: 'Имя',\n                  validation: Yup.string().required('Required')\n              },\n            phone: {\n                  title: 'Телефон',\n                  validation: Yup.string().required('Required')\n              },\n\n            email: {\n                  title: 'Email',\n                  validation: Yup.string().email()\n              },\n\n            web: {\n                  title: 'Web',\n                  validation: Yup.string().url()\n              },\n\n        };\n         \n        return (\n\n                <FormikModal fieldList = {fieldsList}\n                             title = {this.props.data.service_display_name}\n                             api = {api}\n                             resourse = {resource}\n                             id = {this.props.data.id}\n                             data = {this.props.data} >\n                    {this.props.children}\n\n                </FormikModal>\n               );\n\n    }\n\n};\n\n\nexport default FormModal;","\n// Module configuration\nexport const resource = 'contacts';\nexport const api = '/api/' + resource + '/';","import React, { Component } from \"react\";\nimport { MdEdit } from \"react-icons/md\";\n\nimport DeleteDialog from \"../../components/DataUpdaters/DeleteDialog_OLD\";\nimport TableListView from \"../../components/ListViews/TableListView\";\nimport FormModal from \"./FormModal\";\nimport {api, resource} from \"./_config\";\nimport WindowWidget from \"../../components/WindowWidget\";\nimport ButtonLink from \"../../components/ButtonLink\";\n\n/**\n * Contacts List Widget manages contacts widget in Contractor's card\n *\n * @author: Mikhail Lazarev\n */\n\nclass ListWidget extends Component {\n    /**\n     * Converts data into JSX table\n     * @param data\n     * @returns JSX table\n     */\n\n    renderItems(data) {\n         let num=0;\n\n         const items = Object.values(data)\n            .sort(this.sort)\n            .map(item => this.renderOneItem(num++, item)\n                );\n\n         return items;\n    }\n\n    /**\n     * Sort items lambda function\n     *\n     * For finances we use service_type to group items by service type\n     *\n     */\n\n    sort = (a,b) => {\n        if (a.last_update > b.last_update) return -1;\n        return 1;\n    }\n\n\n    /** Render Items (with header if needed) */\n\n    renderOneItem(num, item) {\n\n         return <tr >\n\n                <td  width=\"95%\">\n                     <strong>{ item.name }</strong> <br />\n                        { item.phone } <br />\n                        { item.email } <br />\n                        { item.web }\n                </td>\n\n                <td>\n                    <FormModal data={item} id={item.id}>\n                      <MdEdit />\n                    </FormModal> &nbsp;\n\n                    <DeleteDialog\n                        api={api}\n                        resource={resource}\n                        id={item.id}\n                        updateData = { this.props.updateData }\n                        />\n                </td>\n           </tr>\n    }\n\n    /** Render component function */\n\n    render() {\n\n        const items = this.renderItems(this.props.data.contacts);\n        const rightToolbar =  <ButtonLink to={`/suppliers/${this.props.data.id}/contacts/new/`} title={\"+ Добавить\"} />\n\n        return  <WindowWidget title={\"Контакты\"} rightToolbar={rightToolbar}>\n                    <TableListView items={items} />\n                </WindowWidget>\n    }\n\n};\n\n\n\nexport default ListWidget;","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { numberWithCommas } from \"../../utils/formaters\";\nimport TableListView from \"../../components/ListViews/TableListView\";\nimport ButtonLink from \"../../components/ButtonLink\";\n\n\n/**\n * PayerList manages whole finance table\n *\n * @author: Mikhail Lazarev\n */\n\nclass ListWidget extends Component {\n\n    /**\n     * Converts data into JSX table\n     * @param data\n     * @returns JSX table\n     */\n\n    renderItems(data, orderBy) {\n        let num=0, sort;\n\n        if (orderBy.startsWith(\"-\")) {\n            orderBy = orderBy.substr(1); // Remove \"-\" at the beginning\n            sort = (a,b) => (a[orderBy] < b[orderBy]) ? -1: 1;\n        } else sort = (a,b) => (a[orderBy] > b[orderBy]) ? -1: 1;\n\n        const items = Object.values(data)\n        .sort(sort)\n        .map(item => this.renderOneItem(num++, item)\n            );\n\n        return items;\n    }\n\n    /** Render Items (with header if needed) */\n\n    renderOneItem(num, item) {\n\n        const funcLinkOption = () => this.props.history.push(`/payers/${item.id}`);\n\n        return  <tr onClick={funcLinkOption} >\n                    <td>{item.type_display}</td>\n                    <td>{item.name}</td>\n                    <td style={{textAlign: 'center'}}>{item.INN}</td>\n                    <td style={{textAlign: 'center'}}>{item.address }</td>\n                    <td></td>\n               </tr>\n    }\n\n    /** Render Toolbar */\n\n    renderToolbar() {\n\n        return  <>\n                    <ButtonLink to={`/suppliers/${this.props.id}/payers/new_company`} title={'+ Добавить юр. лицо'} />\n                    <ButtonLink to={`/suppliers/${this.props.id}/payers/new_person`} title={'+ Добавить ИП'} />\n                    <ButtonLink to={`/suppliers/${this.props.id}/payers/new_enterpreneur`} title={'+ Добавить физ. лицо'} />\n            </>\n    }\n\n    /** Render component function */\n\n    render() {\n\n       const items = this.renderItems(this.props.data, \"date\");\n\n       const tableHeader = [\n            {name: \"Тип\", width: \"5%\"},\n            {name: \"Название\", width: \"55%\"},\n            {name: \"ИНН\", width: \"15%\", align: \"center\"},\n            {name: \"Адрес\", width: \"30%\", align: \"center\"},\n        ];\n\n        const toolbar = this.renderToolbar();\n\n        return <TableListView toolbar={toolbar} tableHeader={tableHeader} items={items} />\n    }\n\n};\n\n\nexport default ListWidget;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\"\nimport { MdCallMerge } from \"react-icons/md/index\";\nimport * as actions from \"../../actions/dataLoader\";\nimport UpdateWithConfirmation from \"./UpdateWithConfirmation\"\n\n\nclass MergeDialog extends Component {\n\n  render() {\n    console.log(\"FOFOFO\", this.props)\n    return (\n      <>\n        <UpdateWithConfirmation\n            title={\"Подтвердите объединение\"}\n            body={`Вы действительно собираетесь объединить запись ${this.props.id} с ${this.props.alias_id} ? Восстановление будет невозможно!`}\n            buttonComponent={MdCallMerge}\n            actionName={\"Объединить\"}\n            onAction={(hash) => this.props.mergeItem(this.props.api, this.props.resource, this.props.id, this.props.alias_id, hash)}\n            hashPrefix={'MERGE'}\n            {...this.props}\n        />\n      </>\n    );\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n     mergeItem: (api, resource, id, alias_id, hashSent) => dispatch(actions.mergeDetailUpdateDetail(api, resource, id, alias_id, hashSent)),\n});\n\n\nexport default connect(null, mapDispatchToProps)(MergeDialog);","import React, { Component } from \"react\";\n\nimport {ListDataLoader} from \"../../components/DataLoaders/DataLoaderList\";\nimport ListHelper from \"./ListHelper\";\nimport MergeDialog from \"../../components/DataUpdaters/MergeDialog\"\nimport {api, resource} from \"./_config\";\n\n\nclass DuplicatesWidget extends Component {\n\n    /**\n     * Defines Line Toolbar for delete operations\n     * @param id - id for Line\n     * @returns JSX code which will be places in <td> </td> component\n     */\n\n    renderLineToolbar = (id, updateData) => {\n        return <MergeDialog api={api}\n                            resource={resource}\n                            id={this.props.id}\n                            alias_id={id}\n                            updateData={updateData}/>\n    }\n\n    render() {\n\n        const resource_duplicates = \"suppliers_duplicates\";\n        const api_duplicates = \"/api/suppliers/\" + this.props.id + \"/duplicates/\";\n\n        return <ListDataLoader api={api_duplicates} resource={resource_duplicates}>\n            <ListHelper\n                renderLineToolbar={this.renderLineToolbar}\n                {...this.props} />\n        </ListDataLoader>\n\n    }\n}\n\n\nexport default DuplicatesWidget","import React from \"react\";\nimport {Button, Container, Nav, Tab, Row, Col} from \"react-bootstrap\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\";\nimport TabBar from \"../../components/TabBar/TabBar\";\n\nimport InfoWidget from  \"./InfoWidget\";\nimport ContactsListWidget from \"../Contacts/ListWidget\";\nimport OptionsListWidget from \"../Options/ListWidget\";\nimport PayersListWidget from \"../Payers/ListWidget\";\n\nimport FinanceList from \"../Finances/ListView\";\nimport DuplicatesWidget from \"./DuplicatesWidget\";\n\nimport {api, resource} from \"./_config\";\n\n\nconst DetailView = (props) => {\n\n    return <>\n            <PageHeader header={props.data.name} subHeader={props.data.job}/>\n\n            <TabBar id={props.id} resource={resource} tab={props.match.params.tab} history={props.history} >\n                <Tab.Pane eventKey=\"info\" label={\"Инфо\"}>\n                    <Row>\n                        <Col sm={8}><InfoWidget {...props} /></Col>\n                        <Col sm={4}><ContactsListWidget data={props.data} updateData={props.updateData}/></Col>\n                    </Row>\n                </Tab.Pane>\n\n                <Tab.Pane eventKey={\"options\"} label={\"Опции\"}>\n                    <OptionsListWidget id = { props.id } {...props} data={props.data.options} />\n                </Tab.Pane>\n\n                <Tab.Pane eventKey=\"payers\" label={\"Плательщики\"}>\n                    <PayersListWidget id = { props.id } {...props} data={props.data.payers} />\n                </Tab.Pane>\n\n                <Tab.Pane eventKey=\"finances\" label={\"Финансы\"}>\n                    <FinanceList id = { props.id } {...props} data={props.data.finances} />\n                </Tab.Pane>\n\n                <Tab.Pane eventKey=\"duplicates\" label={\"Дубликаты\"}>\n                    <DuplicatesWidget {...props}/>\n                </Tab.Pane>\n             </TabBar>\n\n        </>\n};\n\nexport default DetailDataLoaderWrapper(DetailView, api, resource);","import React, { Component } from \"react\";\nimport * as Yup from 'yup';\nimport {Card, Tab, Nav, Container, Row, Button, Col, ListGroup, Form, InputGroup} from \"react-bootstrap\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\";\nimport FormikForm from \"../../components/Forms/FormikForm\"\nimport {api, resource} from \"./_config\";\n\nclass FormView extends Component {\n\n    render() {\n\n        const fieldsList = {\n            name: {\n                  title: 'Наименование',\n                  sm: 12,\n                  validation: Yup.string().required('Required')\n            },\n\n            job: {\n                  title: 'Функция',\n                  sm: 12,\n                  validation: Yup.string().required('Required')\n            },\n\n            description: {\n                  title: 'Описание',\n                  sm: 12,\n                  type: 'textarea',\n                  validation: Yup.string()\n            },\n\n            website: {\n                  title: 'Сайт',\n                  sm: 12,\n                  validation: Yup.string().url()\n            },\n        };\n\n        // ToDo: add correct \"New\" backlink\n         \n        const backLink = (this.props.id === 'new') ? \"/suppliers/\" : \"/suppliers/\" + this.props.id;\n        return (\n            <div>\n            <PageHeader\n                header = { this.props.name }\n                subHeader =  { this.props.job }\n            />\n            <Container fluid style={{ paddingLeft: 40, paddingRight: 40}}>\n\n            <FormikForm fieldList = {fieldsList}\n                        onSubmit = {this.onSubmit}\n                        initialValues = {this.props.data}\n                        onSuccessLink = {backLink}\n                        {...this.props}\n              />\n        </Container>\n      </div>\n\n    );\n\n    }\n\n};\n\n\nexport default (props) => {\n    let new_api;\n    /*\n    if ((props.match.params.id === 'new') && (props.match.params.deal_id !== undefined)) {\n       new_api = `/api/deals/${props.match.params.deal_id}/events/`;\n    }\n    */\n    const Wrapper = DetailDataLoaderWrapper(FormView, api,  resource, new_api);\n    return <Wrapper {...props}/>;\n}","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport * as actions from \"../actions/modals\";\nimport {getConfirmation, getHashUpdates} from \"../reducers\";\nimport * as status from \"../status\";\n\n\nclass Confirmation extends Component {\n\n    state = {\n        hash: 0\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        const hash = this.state.hash;\n        if (hash === 0) return;\n        if (this.props.hashUpdates[hash] !== undefined) {\n            this.setState({ hash: 0});\n            console.log(\"C-M2\", this.props);\n            if ((this.props.confirmation.data) && (this.props.confirmation.data.updateData)) this.props.confirmation.data.updateData();\n        }\n    }\n\n    handleClose =() => {\n        this.props.hideConfirmation();\n    };\n\n    onAction = () => {\n        this.handleClose();\n        const hash = this.props.confirmation.data.hashPrefix  + Date();\n        this.setState({status: status.STATUS_LOADING, hash: hash})\n        this.props.confirmation.data.onAction(hash)\n    };\n\n    render() {\n\n        console.log(\"C-M\", this.props.confirmation)\n\n        if (!this.props.confirmation.data) return \"\";\n        const data = this.props.confirmation.data;\n        const show = this.props.confirmation.show;\n\n        return (\n            <Modal show={show}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{data.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{data.body}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={this.handleClose}>\n                        Отменить\n                    </Button>\n                    <Button variant=\"danger\" onClick={this.onAction}>\n                        {data.buttonActionName}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nConfirmation.propTypes = {\n\n    confirmation: PropTypes.object,\n    action: PropTypes.func.isRequired,\n    hideConfirmation: PropTypes.func.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n    confirmation: getConfirmation(state),\n    hashUpdates: getHashUpdates(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n     hideConfirmation: () => dispatch(actions.hideConfirmation())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirmation);","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router';\nimport { Container } from \"react-bootstrap\";\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux'\n\nimport AppBar from '../components/AppBar/AppBar'\nimport Footer from '../components/Footer'\n\nimport Login from \"./Auth/Login\";\nimport SignUp from \"./Auth/SignUp\";\nimport OAuthComplete from \"./Auth/OAuthComplete\";\n\nimport Page404 from \"../components/Page404\";\nimport {authErrors, isAuthenticated, refreshTime} from \"../reducers\";\nimport {logout} from \"../actions/auth\";\n\nimport ContOptionFormView from \"./ContOptions/FormView\";\n\n\nimport DealsDetailView from \"./Deals/DetailView\";\nimport DealsFormView from \"./Deals/FormView\";\nimport DealsListView from \"./Deals/ListView\"\n\nimport ProjectsListView from \"./Projects/ListView\"\nimport ProjectsDetailView from \"./Projects/DetailView\"\nimport ProjectsFormView from \"./Projects/FormView\";\n\nimport OptionsDetailView from \"./Options/DetailView\";\nimport OptionsFormView from \"./Options/FormView\";\nimport OptionsListWidget from \"./Options/ListWidget\";\n\nimport PayersDetailView from \"./Payers/DetailView\";\nimport PayersFormView from \"./Payers/FormView\";\n\nimport ServicesListView from \"./Services/ListView\";\nimport ServicesFormView from \"./Services/FormView\";\nimport ServicesDetailView from \"./Services/DetailView\";\nimport GroupsDetailView from \"./Groups/GroupDetail\";\n\nimport SuppliersListView from \"./Suppliers/ListView\";\nimport SuppliersDetailView from \"./Suppliers/DetailView\";\nimport SupplierFormView from \"./Suppliers/FormView\";\nimport ConfirmationModal from \"../components/ConfirmationModal\";\n\n\n\n\n\nexport class App extends Component {\n\n  render() {\n    console.log(\"PROPS\", this.props)\n\n    const routesNotAuthenticated = (\n      <Switch>\n          <Route path=\"/login/\"  component={Login}/>\n          <Route path=\"/signup/\" component={SignUp}/>\n          <Route exact path=\"/auth/google/complete/\"\n                 component={() => <OAuthComplete {...this.props} provider={'google-oauth2'}/>}\n          />\n          <Route path='*' component={Login}/>\n      </Switch>);\n\n    const routesAuthenticated = (\n        <Switch>\n\n            <Route exact path=\"/cont_options/:id\" component={ ContOptionFormView } />\n\n            <Route exact path=\"/deals/\" component={ DealsListView } />\n            <Route exact path=\"/deals/:id/edit\" component={ DealsFormView } />\n            <Route exact path=\"/deals/:id/:tab\" component={ DealsDetailView } />\n            <Route exact path=\"/deals/:id\" component={ DealsDetailView } />\n            <Route exact path=\"/deals/:deal_id/Projects/:id\" component={ ProjectsFormView }  />\n\n            <Route exact path=\"/projects/\" component={ ProjectsListView } />\n            <Route exact path=\"/projects/:id/edit\" component={ ProjectsFormView } />\n            <Route exact path=\"/projects/:id/:tab\" component={ ProjectsDetailView } />\n            <Route exact path=\"/projects/:id\" component={ ProjectsDetailView } />\n\n            <Route exact path=\"/options/\" component={ OptionsListWidget } />\n            <Route exact path=\"/options/:id/edit\" component={ OptionsFormView } />\n            <Route exact path=\"/options/:id/:tab\" component={ OptionsDetailView } />\n            <Route exact path=\"/options/:id\" component={ OptionsDetailView } />\n            <Route exact path=\"/options/:option_id/Projects/:id\" component={ ProjectsFormView }  />\n            <Route exact path=\"/options/\" component={ OptionsListWidget } />\n            <Route exact path=\"/options/:id/edit\" component={ OptionsFormView } />\n\n            <Route exact path=\"/payers/:id/edit\" component={ PayersFormView } />\n            <Route exact path=\"/payers/:id\" component={ PayersDetailView } />\n\n            <Route exact path=\"/services/\" component={ ServicesListView } />\n            <Route exact path=\"/services/group/:id\" component={ GroupsDetailView } />\n            <Route exact path=\"/services/:id/edit\" component={ ServicesFormView } />\n            <Route exact path=\"/services/:id/:tab\" component={ ServicesDetailView } />\n            <Route exact path=\"/services/:id\" component={ ServicesDetailView } />\n            <Route exact path=\"/services/:service_id/options/:id\" component={ OptionsFormView }  />\n\n            // Suppliers\n            <Route exact path=\"/suppliers/\" component={ SuppliersListView } />\n            <Route exact path=\"/suppliers/:id/edit\" component={ SupplierFormView } />\n            <Route exact path=\"/suppliers/:id/:tab\" component={ SuppliersDetailView } />\n            <Route exact path=\"/suppliers/:id\" component={ SuppliersDetailView } />\n            <Route exact path=\"/suppliers/:supplier_id/payers/:id\" component={ PayersFormView } />\n\n            <Route exact path=\"/\" render={() => (<Redirect to=\"/projects\"/>)}/>\n            <Route exact path=\"/login\" render={() => (<Redirect to=\"/projects\"/>)}/>\n            <Route exact path=\"/auth/*\" render={() => (<Redirect to=\"/projects\"/>)}/>\n            <Route path='*' component={ Page404 }/>\n        </Switch>);\n\n\n    return <>\n            <ConfirmationModal />\n            <AppBar onLogout={this.props} {...this.props} />\n            { this.props.isAuthenticated ? routesAuthenticated : routesNotAuthenticated }\n            <Footer {...this.props}/>\n        </>\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    errors:          authErrors(state),\n    isAuthenticated: isAuthenticated(state),\n    refreshTime:     refreshTime(state)\n\n})\n\nconst mapDispatchToProps = dispatch => {\n  return {\n        onLogout:               () => dispatch(logout())\n  }\n};\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import { isRSAA, apiMiddleware } from 'redux-api-middleware';\n\nimport { TOKEN_RECEIVED } from \"./actions/actions\";\nimport { refreshAccessToken } from './actions/auth'\nimport { refreshToken, isAccessTokenExpired } from './reducers'\n\n\nexport function createApiMiddleware() {\n  let postponedRSAAs = []\n\n  return ({ dispatch, getState }) => {\n    const rsaaMiddleware = apiMiddleware({dispatch, getState})\n\n    return (next) => (action) => {\n      const nextCheckPostoned = (nextAction) => {\n          // Run postponed actions after token refresh\n          if (nextAction.type === TOKEN_RECEIVED) {\n            next(nextAction);\n            postponedRSAAs.forEach((postponed) => {\n              rsaaMiddleware(next)(postponed)\n            })\n            postponedRSAAs = []\n          } else {\n            next(nextAction)\n          }\n      }\n\n      if(isRSAA(action)) {\n        const state = getState(),\n              token = refreshToken(state)\n\n        if(token && isAccessTokenExpired(state)) {\n          postponedRSAAs.push(action)\n          if(postponedRSAAs.length === 1) {\n            return  rsaaMiddleware(nextCheckPostoned)(refreshAccessToken(token))\n          } else {\n            return\n          }\n        }\n\n        return rsaaMiddleware(next)(action);\n      }\n      return next(action);\n    }\n  }\n}\n\nexport default createApiMiddleware();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport createHistory from 'history/createBrowserHistory'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport { ReactReduxContext } from 'react-redux'\n\nimport App from './containers/App';\nimport configureStore from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'rc-steps/assets/index.css';\nimport 'rc-steps/assets/iconfont.css';\n\nconst history = createHistory();\n\nexport const store = configureStore(history);\n\nconsole.log(\"PROCESS\", process.env)\n\nReactDOM.render((\n\t\t<Provider store={store}>\n\t      \t<ConnectedRouter history={history}>\n\t        \t\t<App />\n\t\t\t</ConnectedRouter>\n\t\t</Provider>\n\n  ), document.getElementById('root'));\n","import storage from 'redux-persist/es/storage'\nimport { applyMiddleware, createStore, compose  } from 'redux'\nimport { createFilter   } from 'redux-persist-transform-filter';\nimport { persistReducer, persistStore } from 'redux-persist'\nimport { routerMiddleware } from 'react-router-redux'\nimport thunk from 'redux-thunk'\n\nimport apiMiddleware from './middleware';\nimport rootReducer from './reducers'\n\n\nexport default (history) => {\n    const persistedFilter = createFilter(\n            'auth', ['access', 'refresh']\n            );\n\n    // Redux DevTools\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\n    const reducer = persistReducer(\n    {\n      key: 'polls',\n      storage: storage,\n      whitelist: ['auth'],\n      transforms: [ persistedFilter]\n    },\n    rootReducer(history)\n    )\n\n    const store = createStore(\n    reducer,\n    {},\n    composeEnhancers(\n        applyMiddleware(\n            apiMiddleware,\n            routerMiddleware(history),\n            thunk\n        )\n    ));\n\n    persistStore(store)\n\n    return store\n}"],"sourceRoot":""}